const REAL invdx0 = 1.0/dxx[0];
const REAL invdx1 = 1.0/dxx[1];
const REAL invdx2 = 1.0/dxx[2];
#pragma omp parallel for
for(int i2=NGHOSTS; i2<NGHOSTS+Nxx[2]; i2++) {
    const REAL xx2 = xx[2][i2];
    for(int i1=NGHOSTS; i1<NGHOSTS+Nxx[1]; i1++) {
        const REAL xx1 = xx[1][i1];
        for(int i0=NGHOSTS; i0<NGHOSTS+Nxx[0]; i0++) {
            const REAL xx0 = xx[0][i0];
            {
               /* 
                * NRPy+ Finite Difference Code Generation, Step 1 of 3: Read from main memory and compute finite difference stencils:
                */
               const double hDD00_i0m3_i1_i2 = in_gfs[IDX4(HDD00GF, i0-3,i1,i2)];
               const double hDD00_i0m2_i1_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1,i2)];
               const double hDD00_i0m1_i1_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1,i2)];
               const double hDD00 = in_gfs[IDX4(HDD00GF, i0,i1,i2)];
               const double hDD00_i0p1_i1_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1,i2)];
               const double hDD00_i0p2_i1_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1,i2)];
               const double hDD00_i0p3_i1_i2 = in_gfs[IDX4(HDD00GF, i0+3,i1,i2)];
               const double hDD01_i0m3_i1_i2 = in_gfs[IDX4(HDD01GF, i0-3,i1,i2)];
               const double hDD01_i0m2_i1_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1,i2)];
               const double hDD01_i0m1_i1_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1,i2)];
               const double hDD01 = in_gfs[IDX4(HDD01GF, i0,i1,i2)];
               const double hDD01_i0p1_i1_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1,i2)];
               const double hDD01_i0p2_i1_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1,i2)];
               const double hDD01_i0p3_i1_i2 = in_gfs[IDX4(HDD01GF, i0+3,i1,i2)];
               const double hDD02_i0m3_i1_i2 = in_gfs[IDX4(HDD02GF, i0-3,i1,i2)];
               const double hDD02_i0m2_i1_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1,i2)];
               const double hDD02_i0m1_i1_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1,i2)];
               const double hDD02 = in_gfs[IDX4(HDD02GF, i0,i1,i2)];
               const double hDD02_i0p1_i1_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1,i2)];
               const double hDD02_i0p2_i1_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1,i2)];
               const double hDD02_i0p3_i1_i2 = in_gfs[IDX4(HDD02GF, i0+3,i1,i2)];
               const double hDD11_i0m3_i1_i2 = in_gfs[IDX4(HDD11GF, i0-3,i1,i2)];
               const double hDD11_i0m2_i1_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1,i2)];
               const double hDD11_i0m1_i1_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1,i2)];
               const double hDD11 = in_gfs[IDX4(HDD11GF, i0,i1,i2)];
               const double hDD11_i0p1_i1_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1,i2)];
               const double hDD11_i0p2_i1_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1,i2)];
               const double hDD11_i0p3_i1_i2 = in_gfs[IDX4(HDD11GF, i0+3,i1,i2)];
               const double hDD12_i0m3_i1_i2 = in_gfs[IDX4(HDD12GF, i0-3,i1,i2)];
               const double hDD12_i0m2_i1_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1,i2)];
               const double hDD12_i0m1_i1_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1,i2)];
               const double hDD12 = in_gfs[IDX4(HDD12GF, i0,i1,i2)];
               const double hDD12_i0p1_i1_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1,i2)];
               const double hDD12_i0p2_i1_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1,i2)];
               const double hDD12_i0p3_i1_i2 = in_gfs[IDX4(HDD12GF, i0+3,i1,i2)];
               const double hDD22_i0m3_i1_i2 = in_gfs[IDX4(HDD22GF, i0-3,i1,i2)];
               const double hDD22_i0m2_i1_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1,i2)];
               const double hDD22_i0m1_i1_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1,i2)];
               const double hDD22 = in_gfs[IDX4(HDD22GF, i0,i1,i2)];
               const double hDD22_i0p1_i1_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1,i2)];
               const double hDD22_i0p2_i1_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1,i2)];
               const double hDD22_i0p3_i1_i2 = in_gfs[IDX4(HDD22GF, i0+3,i1,i2)];
               const double aDD00_i0m3_i1_i2 = in_gfs[IDX4(ADD00GF, i0-3,i1,i2)];
               const double aDD00_i0m2_i1_i2 = in_gfs[IDX4(ADD00GF, i0-2,i1,i2)];
               const double aDD00_i0m1_i1_i2 = in_gfs[IDX4(ADD00GF, i0-1,i1,i2)];
               const double aDD00 = in_gfs[IDX4(ADD00GF, i0,i1,i2)];
               const double aDD00_i0p1_i1_i2 = in_gfs[IDX4(ADD00GF, i0+1,i1,i2)];
               const double aDD00_i0p2_i1_i2 = in_gfs[IDX4(ADD00GF, i0+2,i1,i2)];
               const double aDD00_i0p3_i1_i2 = in_gfs[IDX4(ADD00GF, i0+3,i1,i2)];
               const double aDD01_i0m3_i1_i2 = in_gfs[IDX4(ADD01GF, i0-3,i1,i2)];
               const double aDD01_i0m2_i1_i2 = in_gfs[IDX4(ADD01GF, i0-2,i1,i2)];
               const double aDD01_i0m1_i1_i2 = in_gfs[IDX4(ADD01GF, i0-1,i1,i2)];
               const double aDD01 = in_gfs[IDX4(ADD01GF, i0,i1,i2)];
               const double aDD01_i0p1_i1_i2 = in_gfs[IDX4(ADD01GF, i0+1,i1,i2)];
               const double aDD01_i0p2_i1_i2 = in_gfs[IDX4(ADD01GF, i0+2,i1,i2)];
               const double aDD01_i0p3_i1_i2 = in_gfs[IDX4(ADD01GF, i0+3,i1,i2)];
               const double aDD02_i0m3_i1_i2 = in_gfs[IDX4(ADD02GF, i0-3,i1,i2)];
               const double aDD02_i0m2_i1_i2 = in_gfs[IDX4(ADD02GF, i0-2,i1,i2)];
               const double aDD02_i0m1_i1_i2 = in_gfs[IDX4(ADD02GF, i0-1,i1,i2)];
               const double aDD02 = in_gfs[IDX4(ADD02GF, i0,i1,i2)];
               const double aDD02_i0p1_i1_i2 = in_gfs[IDX4(ADD02GF, i0+1,i1,i2)];
               const double aDD02_i0p2_i1_i2 = in_gfs[IDX4(ADD02GF, i0+2,i1,i2)];
               const double aDD02_i0p3_i1_i2 = in_gfs[IDX4(ADD02GF, i0+3,i1,i2)];
               const double aDD11_i0m3_i1_i2 = in_gfs[IDX4(ADD11GF, i0-3,i1,i2)];
               const double aDD11_i0m2_i1_i2 = in_gfs[IDX4(ADD11GF, i0-2,i1,i2)];
               const double aDD11_i0m1_i1_i2 = in_gfs[IDX4(ADD11GF, i0-1,i1,i2)];
               const double aDD11 = in_gfs[IDX4(ADD11GF, i0,i1,i2)];
               const double aDD11_i0p1_i1_i2 = in_gfs[IDX4(ADD11GF, i0+1,i1,i2)];
               const double aDD11_i0p2_i1_i2 = in_gfs[IDX4(ADD11GF, i0+2,i1,i2)];
               const double aDD11_i0p3_i1_i2 = in_gfs[IDX4(ADD11GF, i0+3,i1,i2)];
               const double aDD12_i0m3_i1_i2 = in_gfs[IDX4(ADD12GF, i0-3,i1,i2)];
               const double aDD12_i0m2_i1_i2 = in_gfs[IDX4(ADD12GF, i0-2,i1,i2)];
               const double aDD12_i0m1_i1_i2 = in_gfs[IDX4(ADD12GF, i0-1,i1,i2)];
               const double aDD12 = in_gfs[IDX4(ADD12GF, i0,i1,i2)];
               const double aDD12_i0p1_i1_i2 = in_gfs[IDX4(ADD12GF, i0+1,i1,i2)];
               const double aDD12_i0p2_i1_i2 = in_gfs[IDX4(ADD12GF, i0+2,i1,i2)];
               const double aDD12_i0p3_i1_i2 = in_gfs[IDX4(ADD12GF, i0+3,i1,i2)];
               const double aDD22_i0m3_i1_i2 = in_gfs[IDX4(ADD22GF, i0-3,i1,i2)];
               const double aDD22_i0m2_i1_i2 = in_gfs[IDX4(ADD22GF, i0-2,i1,i2)];
               const double aDD22_i0m1_i1_i2 = in_gfs[IDX4(ADD22GF, i0-1,i1,i2)];
               const double aDD22 = in_gfs[IDX4(ADD22GF, i0,i1,i2)];
               const double aDD22_i0p1_i1_i2 = in_gfs[IDX4(ADD22GF, i0+1,i1,i2)];
               const double aDD22_i0p2_i1_i2 = in_gfs[IDX4(ADD22GF, i0+2,i1,i2)];
               const double aDD22_i0p3_i1_i2 = in_gfs[IDX4(ADD22GF, i0+3,i1,i2)];
               const double lambdaU0_i0m3_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-3,i1,i2)];
               const double lambdaU0_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-2,i1,i2)];
               const double lambdaU0_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-1,i1,i2)];
               const double lambdaU0 = in_gfs[IDX4(LAMBDAU0GF, i0,i1,i2)];
               const double lambdaU0_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+1,i1,i2)];
               const double lambdaU0_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+2,i1,i2)];
               const double lambdaU0_i0p3_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+3,i1,i2)];
               const double lambdaU1_i0m3_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-3,i1,i2)];
               const double lambdaU1_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-2,i1,i2)];
               const double lambdaU1_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-1,i1,i2)];
               const double lambdaU1 = in_gfs[IDX4(LAMBDAU1GF, i0,i1,i2)];
               const double lambdaU1_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+1,i1,i2)];
               const double lambdaU1_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+2,i1,i2)];
               const double lambdaU1_i0p3_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+3,i1,i2)];
               const double lambdaU2_i0m3_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-3,i1,i2)];
               const double lambdaU2_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-2,i1,i2)];
               const double lambdaU2_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-1,i1,i2)];
               const double lambdaU2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1,i2)];
               const double lambdaU2_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+1,i1,i2)];
               const double lambdaU2_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+2,i1,i2)];
               const double lambdaU2_i0p3_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+3,i1,i2)];
               const double vetU0_i0m3_i1_i2 = in_gfs[IDX4(VETU0GF, i0-3,i1,i2)];
               const double vetU0_i0m2_i1_i2 = in_gfs[IDX4(VETU0GF, i0-2,i1,i2)];
               const double vetU0_i0m1_i1_i2 = in_gfs[IDX4(VETU0GF, i0-1,i1,i2)];
               const double vetU0 = in_gfs[IDX4(VETU0GF, i0,i1,i2)];
               const double vetU0_i0p1_i1_i2 = in_gfs[IDX4(VETU0GF, i0+1,i1,i2)];
               const double vetU0_i0p2_i1_i2 = in_gfs[IDX4(VETU0GF, i0+2,i1,i2)];
               const double vetU0_i0p3_i1_i2 = in_gfs[IDX4(VETU0GF, i0+3,i1,i2)];
               const double vetU1_i0m3_i1_i2 = in_gfs[IDX4(VETU1GF, i0-3,i1,i2)];
               const double vetU1_i0m2_i1_i2 = in_gfs[IDX4(VETU1GF, i0-2,i1,i2)];
               const double vetU1_i0m1_i1_i2 = in_gfs[IDX4(VETU1GF, i0-1,i1,i2)];
               const double vetU1 = in_gfs[IDX4(VETU1GF, i0,i1,i2)];
               const double vetU1_i0p1_i1_i2 = in_gfs[IDX4(VETU1GF, i0+1,i1,i2)];
               const double vetU1_i0p2_i1_i2 = in_gfs[IDX4(VETU1GF, i0+2,i1,i2)];
               const double vetU1_i0p3_i1_i2 = in_gfs[IDX4(VETU1GF, i0+3,i1,i2)];
               const double vetU2_i0m3_i1_i2 = in_gfs[IDX4(VETU2GF, i0-3,i1,i2)];
               const double vetU2_i0m2_i1_i2 = in_gfs[IDX4(VETU2GF, i0-2,i1,i2)];
               const double vetU2_i0m1_i1_i2 = in_gfs[IDX4(VETU2GF, i0-1,i1,i2)];
               const double vetU2 = in_gfs[IDX4(VETU2GF, i0,i1,i2)];
               const double vetU2_i0p1_i1_i2 = in_gfs[IDX4(VETU2GF, i0+1,i1,i2)];
               const double vetU2_i0p2_i1_i2 = in_gfs[IDX4(VETU2GF, i0+2,i1,i2)];
               const double vetU2_i0p3_i1_i2 = in_gfs[IDX4(VETU2GF, i0+3,i1,i2)];
               const double betU0_i0m3_i1_i2 = in_gfs[IDX4(BETU0GF, i0-3,i1,i2)];
               const double betU0_i0m2_i1_i2 = in_gfs[IDX4(BETU0GF, i0-2,i1,i2)];
               const double betU0_i0m1_i1_i2 = in_gfs[IDX4(BETU0GF, i0-1,i1,i2)];
               const double betU0 = in_gfs[IDX4(BETU0GF, i0,i1,i2)];
               const double betU0_i0p1_i1_i2 = in_gfs[IDX4(BETU0GF, i0+1,i1,i2)];
               const double betU0_i0p2_i1_i2 = in_gfs[IDX4(BETU0GF, i0+2,i1,i2)];
               const double betU0_i0p3_i1_i2 = in_gfs[IDX4(BETU0GF, i0+3,i1,i2)];
               const double betU1_i0m3_i1_i2 = in_gfs[IDX4(BETU1GF, i0-3,i1,i2)];
               const double betU1_i0m2_i1_i2 = in_gfs[IDX4(BETU1GF, i0-2,i1,i2)];
               const double betU1_i0m1_i1_i2 = in_gfs[IDX4(BETU1GF, i0-1,i1,i2)];
               const double betU1 = in_gfs[IDX4(BETU1GF, i0,i1,i2)];
               const double betU1_i0p1_i1_i2 = in_gfs[IDX4(BETU1GF, i0+1,i1,i2)];
               const double betU1_i0p2_i1_i2 = in_gfs[IDX4(BETU1GF, i0+2,i1,i2)];
               const double betU1_i0p3_i1_i2 = in_gfs[IDX4(BETU1GF, i0+3,i1,i2)];
               const double betU2_i0m3_i1_i2 = in_gfs[IDX4(BETU2GF, i0-3,i1,i2)];
               const double betU2_i0m2_i1_i2 = in_gfs[IDX4(BETU2GF, i0-2,i1,i2)];
               const double betU2_i0m1_i1_i2 = in_gfs[IDX4(BETU2GF, i0-1,i1,i2)];
               const double betU2 = in_gfs[IDX4(BETU2GF, i0,i1,i2)];
               const double betU2_i0p1_i1_i2 = in_gfs[IDX4(BETU2GF, i0+1,i1,i2)];
               const double betU2_i0p2_i1_i2 = in_gfs[IDX4(BETU2GF, i0+2,i1,i2)];
               const double betU2_i0p3_i1_i2 = in_gfs[IDX4(BETU2GF, i0+3,i1,i2)];
               const double trK_i0m3_i1_i2 = in_gfs[IDX4(TRKGF, i0-3,i1,i2)];
               const double trK_i0m2_i1_i2 = in_gfs[IDX4(TRKGF, i0-2,i1,i2)];
               const double trK_i0m1_i1_i2 = in_gfs[IDX4(TRKGF, i0-1,i1,i2)];
               const double trK = in_gfs[IDX4(TRKGF, i0,i1,i2)];
               const double trK_i0p1_i1_i2 = in_gfs[IDX4(TRKGF, i0+1,i1,i2)];
               const double trK_i0p2_i1_i2 = in_gfs[IDX4(TRKGF, i0+2,i1,i2)];
               const double trK_i0p3_i1_i2 = in_gfs[IDX4(TRKGF, i0+3,i1,i2)];
               const double cf_i0m3_i1_i2 = in_gfs[IDX4(CFGF, i0-3,i1,i2)];
               const double cf_i0m2_i1_i2 = in_gfs[IDX4(CFGF, i0-2,i1,i2)];
               const double cf_i0m1_i1_i2 = in_gfs[IDX4(CFGF, i0-1,i1,i2)];
               const double cf = in_gfs[IDX4(CFGF, i0,i1,i2)];
               const double cf_i0p1_i1_i2 = in_gfs[IDX4(CFGF, i0+1,i1,i2)];
               const double cf_i0p2_i1_i2 = in_gfs[IDX4(CFGF, i0+2,i1,i2)];
               const double cf_i0p3_i1_i2 = in_gfs[IDX4(CFGF, i0+3,i1,i2)];
               const double alpha_i0m3_i1_i2 = in_gfs[IDX4(ALPHAGF, i0-3,i1,i2)];
               const double alpha_i0m2_i1_i2 = in_gfs[IDX4(ALPHAGF, i0-2,i1,i2)];
               const double alpha_i0m1_i1_i2 = in_gfs[IDX4(ALPHAGF, i0-1,i1,i2)];
               const double alpha = in_gfs[IDX4(ALPHAGF, i0,i1,i2)];
               const double alpha_i0p1_i1_i2 = in_gfs[IDX4(ALPHAGF, i0+1,i1,i2)];
               const double alpha_i0p2_i1_i2 = in_gfs[IDX4(ALPHAGF, i0+2,i1,i2)];
               const double alpha_i0p3_i1_i2 = in_gfs[IDX4(ALPHAGF, i0+3,i1,i2)];
               const double uu_i0m3_i1_i2 = in_gfs[IDX4(UUGF, i0-3,i1,i2)];
               const double uu_i0m2_i1_i2 = in_gfs[IDX4(UUGF, i0-2,i1,i2)];
               const double uu_i0m1_i1_i2 = in_gfs[IDX4(UUGF, i0-1,i1,i2)];
               const double uu = in_gfs[IDX4(UUGF, i0,i1,i2)];
               const double uu_i0p1_i1_i2 = in_gfs[IDX4(UUGF, i0+1,i1,i2)];
               const double uu_i0p2_i1_i2 = in_gfs[IDX4(UUGF, i0+2,i1,i2)];
               const double uu_i0p3_i1_i2 = in_gfs[IDX4(UUGF, i0+3,i1,i2)];
               const double vv_i0m2_i1_i2 = in_gfs[IDX4(VVGF, i0-2,i1,i2)];
               const double vv_i0m1_i1_i2 = in_gfs[IDX4(VVGF, i0-1,i1,i2)];
               const double vv = in_gfs[IDX4(VVGF, i0,i1,i2)];
               const double vv_i0p1_i1_i2 = in_gfs[IDX4(VVGF, i0+1,i1,i2)];
               const double vv_i0p2_i1_i2 = in_gfs[IDX4(VVGF, i0+2,i1,i2)];
               const double tmpFD0 = (5.0/6.0)*aDD00;
               const double tmpFD1 = (5.0/6.0)*aDD01;
               const double tmpFD2 = (5.0/6.0)*aDD02;
               const double tmpFD3 = (5.0/6.0)*aDD11;
               const double tmpFD4 = (5.0/6.0)*aDD12;
               const double tmpFD5 = (5.0/6.0)*aDD22;
               const double tmpFD6 = (1.0/12.0)*alpha_i0m2_i1_i2;
               const double tmpFD7 = -1.0/12.0*alpha_i0p2_i1_i2;
               const double tmpFD8 = pow(invdx0, 2);
               const double tmpFD9 = (5.0/6.0)*alpha;
               const double tmpFD10 = (5.0/6.0)*betU0;
               const double tmpFD11 = (5.0/6.0)*betU1;
               const double tmpFD12 = (5.0/6.0)*betU2;
               const double tmpFD13 = (1.0/12.0)*cf_i0m2_i1_i2;
               const double tmpFD14 = -1.0/12.0*cf_i0p2_i1_i2;
               const double tmpFD15 = (5.0/6.0)*cf;
               const double tmpFD16 = (1.0/12.0)*hDD00_i0m2_i1_i2;
               const double tmpFD17 = -1.0/12.0*hDD00_i0p2_i1_i2;
               const double tmpFD18 = (1.0/12.0)*hDD01_i0m2_i1_i2;
               const double tmpFD19 = -1.0/12.0*hDD01_i0p2_i1_i2;
               const double tmpFD20 = (1.0/12.0)*hDD02_i0m2_i1_i2;
               const double tmpFD21 = -1.0/12.0*hDD02_i0p2_i1_i2;
               const double tmpFD22 = (1.0/12.0)*hDD11_i0m2_i1_i2;
               const double tmpFD23 = -1.0/12.0*hDD11_i0p2_i1_i2;
               const double tmpFD24 = (1.0/12.0)*hDD12_i0m2_i1_i2;
               const double tmpFD25 = -1.0/12.0*hDD12_i0p2_i1_i2;
               const double tmpFD26 = (1.0/12.0)*hDD22_i0m2_i1_i2;
               const double tmpFD27 = -1.0/12.0*hDD22_i0p2_i1_i2;
               const double tmpFD28 = (5.0/6.0)*hDD00;
               const double tmpFD29 = (5.0/6.0)*hDD01;
               const double tmpFD30 = (5.0/6.0)*hDD02;
               const double tmpFD31 = (5.0/6.0)*hDD11;
               const double tmpFD32 = (5.0/6.0)*hDD12;
               const double tmpFD33 = (5.0/6.0)*hDD22;
               const double tmpFD34 = (5.0/6.0)*lambdaU0;
               const double tmpFD35 = (5.0/6.0)*lambdaU1;
               const double tmpFD36 = (5.0/6.0)*lambdaU2;
               const double tmpFD37 = (5.0/6.0)*trK;
               const double tmpFD38 = (1.0/12.0)*uu_i0m2_i1_i2;
               const double tmpFD39 = -1.0/12.0*uu_i0p2_i1_i2;
               const double tmpFD40 = (5.0/6.0)*uu;
               const double tmpFD41 = (1.0/12.0)*vetU0_i0m2_i1_i2;
               const double tmpFD42 = -1.0/12.0*vetU0_i0p2_i1_i2;
               const double tmpFD43 = (1.0/12.0)*vetU1_i0m2_i1_i2;
               const double tmpFD44 = -1.0/12.0*vetU1_i0p2_i1_i2;
               const double tmpFD45 = (1.0/12.0)*vetU2_i0m2_i1_i2;
               const double tmpFD46 = -1.0/12.0*vetU2_i0p2_i1_i2;
               const double tmpFD47 = (5.0/6.0)*vetU0;
               const double tmpFD48 = (5.0/6.0)*vetU1;
               const double tmpFD49 = (5.0/6.0)*vetU2;
               const double UpwindAlgInputaDD_ddnD000 = invdx0*(-3.0/2.0*aDD00_i0m1_i1_i2 + (1.0/2.0)*aDD00_i0m2_i1_i2 - 1.0/12.0*aDD00_i0m3_i1_i2 + (1.0/4.0)*aDD00_i0p1_i1_i2 + tmpFD0);
               const double UpwindAlgInputaDD_ddnD010 = invdx0*(-3.0/2.0*aDD01_i0m1_i1_i2 + (1.0/2.0)*aDD01_i0m2_i1_i2 - 1.0/12.0*aDD01_i0m3_i1_i2 + (1.0/4.0)*aDD01_i0p1_i1_i2 + tmpFD1);
               const double UpwindAlgInputaDD_ddnD020 = invdx0*(-3.0/2.0*aDD02_i0m1_i1_i2 + (1.0/2.0)*aDD02_i0m2_i1_i2 - 1.0/12.0*aDD02_i0m3_i1_i2 + (1.0/4.0)*aDD02_i0p1_i1_i2 + tmpFD2);
               const double UpwindAlgInputaDD_ddnD110 = invdx0*(-3.0/2.0*aDD11_i0m1_i1_i2 + (1.0/2.0)*aDD11_i0m2_i1_i2 - 1.0/12.0*aDD11_i0m3_i1_i2 + (1.0/4.0)*aDD11_i0p1_i1_i2 + tmpFD3);
               const double UpwindAlgInputaDD_ddnD120 = invdx0*(-3.0/2.0*aDD12_i0m1_i1_i2 + (1.0/2.0)*aDD12_i0m2_i1_i2 - 1.0/12.0*aDD12_i0m3_i1_i2 + (1.0/4.0)*aDD12_i0p1_i1_i2 + tmpFD4);
               const double UpwindAlgInputaDD_ddnD220 = invdx0*(-3.0/2.0*aDD22_i0m1_i1_i2 + (1.0/2.0)*aDD22_i0m2_i1_i2 - 1.0/12.0*aDD22_i0m3_i1_i2 + (1.0/4.0)*aDD22_i0p1_i1_i2 + tmpFD5);
               const double UpwindAlgInputaDD_dupD000 = invdx0*(-1.0/4.0*aDD00_i0m1_i1_i2 + (3.0/2.0)*aDD00_i0p1_i1_i2 - 1.0/2.0*aDD00_i0p2_i1_i2 + (1.0/12.0)*aDD00_i0p3_i1_i2 - tmpFD0);
               const double UpwindAlgInputaDD_dupD010 = invdx0*(-1.0/4.0*aDD01_i0m1_i1_i2 + (3.0/2.0)*aDD01_i0p1_i1_i2 - 1.0/2.0*aDD01_i0p2_i1_i2 + (1.0/12.0)*aDD01_i0p3_i1_i2 - tmpFD1);
               const double UpwindAlgInputaDD_dupD020 = invdx0*(-1.0/4.0*aDD02_i0m1_i1_i2 + (3.0/2.0)*aDD02_i0p1_i1_i2 - 1.0/2.0*aDD02_i0p2_i1_i2 + (1.0/12.0)*aDD02_i0p3_i1_i2 - tmpFD2);
               const double UpwindAlgInputaDD_dupD110 = invdx0*(-1.0/4.0*aDD11_i0m1_i1_i2 + (3.0/2.0)*aDD11_i0p1_i1_i2 - 1.0/2.0*aDD11_i0p2_i1_i2 + (1.0/12.0)*aDD11_i0p3_i1_i2 - tmpFD3);
               const double UpwindAlgInputaDD_dupD120 = invdx0*(-1.0/4.0*aDD12_i0m1_i1_i2 + (3.0/2.0)*aDD12_i0p1_i1_i2 - 1.0/2.0*aDD12_i0p2_i1_i2 + (1.0/12.0)*aDD12_i0p3_i1_i2 - tmpFD4);
               const double UpwindAlgInputaDD_dupD220 = invdx0*(-1.0/4.0*aDD22_i0m1_i1_i2 + (3.0/2.0)*aDD22_i0p1_i1_i2 - 1.0/2.0*aDD22_i0p2_i1_i2 + (1.0/12.0)*aDD22_i0p3_i1_i2 - tmpFD5);
               const double alpha_dD0 = invdx0*(-2.0/3.0*alpha_i0m1_i1_i2 + (2.0/3.0)*alpha_i0p1_i1_i2 + tmpFD6 + tmpFD7);
               const double alpha_dDD00 = tmpFD8*(-5.0/2.0*alpha + (4.0/3.0)*alpha_i0m1_i1_i2 + (4.0/3.0)*alpha_i0p1_i1_i2 - tmpFD6 + tmpFD7);
               const double UpwindAlgInputalpha_ddnD0 = invdx0*(-3.0/2.0*alpha_i0m1_i1_i2 + (1.0/2.0)*alpha_i0m2_i1_i2 - 1.0/12.0*alpha_i0m3_i1_i2 + (1.0/4.0)*alpha_i0p1_i1_i2 + tmpFD9);
               const double UpwindAlgInputalpha_dupD0 = invdx0*(-1.0/4.0*alpha_i0m1_i1_i2 + (3.0/2.0)*alpha_i0p1_i1_i2 - 1.0/2.0*alpha_i0p2_i1_i2 + (1.0/12.0)*alpha_i0p3_i1_i2 - tmpFD9);
               const double UpwindAlgInputbetU_ddnD00 = invdx0*(-3.0/2.0*betU0_i0m1_i1_i2 + (1.0/2.0)*betU0_i0m2_i1_i2 - 1.0/12.0*betU0_i0m3_i1_i2 + (1.0/4.0)*betU0_i0p1_i1_i2 + tmpFD10);
               const double UpwindAlgInputbetU_ddnD10 = invdx0*(-3.0/2.0*betU1_i0m1_i1_i2 + (1.0/2.0)*betU1_i0m2_i1_i2 - 1.0/12.0*betU1_i0m3_i1_i2 + (1.0/4.0)*betU1_i0p1_i1_i2 + tmpFD11);
               const double UpwindAlgInputbetU_ddnD20 = invdx0*(-3.0/2.0*betU2_i0m1_i1_i2 + (1.0/2.0)*betU2_i0m2_i1_i2 - 1.0/12.0*betU2_i0m3_i1_i2 + (1.0/4.0)*betU2_i0p1_i1_i2 + tmpFD12);
               const double UpwindAlgInputbetU_dupD00 = invdx0*(-1.0/4.0*betU0_i0m1_i1_i2 + (3.0/2.0)*betU0_i0p1_i1_i2 - 1.0/2.0*betU0_i0p2_i1_i2 + (1.0/12.0)*betU0_i0p3_i1_i2 - tmpFD10);
               const double UpwindAlgInputbetU_dupD10 = invdx0*(-1.0/4.0*betU1_i0m1_i1_i2 + (3.0/2.0)*betU1_i0p1_i1_i2 - 1.0/2.0*betU1_i0p2_i1_i2 + (1.0/12.0)*betU1_i0p3_i1_i2 - tmpFD11);
               const double UpwindAlgInputbetU_dupD20 = invdx0*(-1.0/4.0*betU2_i0m1_i1_i2 + (3.0/2.0)*betU2_i0p1_i1_i2 - 1.0/2.0*betU2_i0p2_i1_i2 + (1.0/12.0)*betU2_i0p3_i1_i2 - tmpFD12);
               const double cf_dD0 = invdx0*(-2.0/3.0*cf_i0m1_i1_i2 + (2.0/3.0)*cf_i0p1_i1_i2 + tmpFD13 + tmpFD14);
               const double cf_dDD00 = tmpFD8*(-5.0/2.0*cf + (4.0/3.0)*cf_i0m1_i1_i2 + (4.0/3.0)*cf_i0p1_i1_i2 - tmpFD13 + tmpFD14);
               const double UpwindAlgInputcf_ddnD0 = invdx0*(-3.0/2.0*cf_i0m1_i1_i2 + (1.0/2.0)*cf_i0m2_i1_i2 - 1.0/12.0*cf_i0m3_i1_i2 + (1.0/4.0)*cf_i0p1_i1_i2 + tmpFD15);
               const double UpwindAlgInputcf_dupD0 = invdx0*(-1.0/4.0*cf_i0m1_i1_i2 + (3.0/2.0)*cf_i0p1_i1_i2 - 1.0/2.0*cf_i0p2_i1_i2 + (1.0/12.0)*cf_i0p3_i1_i2 - tmpFD15);
               const double hDD_dD000 = invdx0*(-2.0/3.0*hDD00_i0m1_i1_i2 + (2.0/3.0)*hDD00_i0p1_i1_i2 + tmpFD16 + tmpFD17);
               const double hDD_dD010 = invdx0*(-2.0/3.0*hDD01_i0m1_i1_i2 + (2.0/3.0)*hDD01_i0p1_i1_i2 + tmpFD18 + tmpFD19);
               const double hDD_dD020 = invdx0*(-2.0/3.0*hDD02_i0m1_i1_i2 + (2.0/3.0)*hDD02_i0p1_i1_i2 + tmpFD20 + tmpFD21);
               const double hDD_dD110 = invdx0*(-2.0/3.0*hDD11_i0m1_i1_i2 + (2.0/3.0)*hDD11_i0p1_i1_i2 + tmpFD22 + tmpFD23);
               const double hDD_dD120 = invdx0*(-2.0/3.0*hDD12_i0m1_i1_i2 + (2.0/3.0)*hDD12_i0p1_i1_i2 + tmpFD24 + tmpFD25);
               const double hDD_dD220 = invdx0*(-2.0/3.0*hDD22_i0m1_i1_i2 + (2.0/3.0)*hDD22_i0p1_i1_i2 + tmpFD26 + tmpFD27);
               const double hDD_dDD0000 = tmpFD8*(-5.0/2.0*hDD00 + (4.0/3.0)*hDD00_i0m1_i1_i2 + (4.0/3.0)*hDD00_i0p1_i1_i2 - tmpFD16 + tmpFD17);
               const double hDD_dDD0100 = tmpFD8*(-5.0/2.0*hDD01 + (4.0/3.0)*hDD01_i0m1_i1_i2 + (4.0/3.0)*hDD01_i0p1_i1_i2 - tmpFD18 + tmpFD19);
               const double hDD_dDD0200 = tmpFD8*(-5.0/2.0*hDD02 + (4.0/3.0)*hDD02_i0m1_i1_i2 + (4.0/3.0)*hDD02_i0p1_i1_i2 - tmpFD20 + tmpFD21);
               const double hDD_dDD1100 = tmpFD8*(-5.0/2.0*hDD11 + (4.0/3.0)*hDD11_i0m1_i1_i2 + (4.0/3.0)*hDD11_i0p1_i1_i2 - tmpFD22 + tmpFD23);
               const double hDD_dDD1200 = tmpFD8*(-5.0/2.0*hDD12 + (4.0/3.0)*hDD12_i0m1_i1_i2 + (4.0/3.0)*hDD12_i0p1_i1_i2 - tmpFD24 + tmpFD25);
               const double hDD_dDD2200 = tmpFD8*(-5.0/2.0*hDD22 + (4.0/3.0)*hDD22_i0m1_i1_i2 + (4.0/3.0)*hDD22_i0p1_i1_i2 - tmpFD26 + tmpFD27);
               const double UpwindAlgInputhDD_ddnD000 = invdx0*(-3.0/2.0*hDD00_i0m1_i1_i2 + (1.0/2.0)*hDD00_i0m2_i1_i2 - 1.0/12.0*hDD00_i0m3_i1_i2 + (1.0/4.0)*hDD00_i0p1_i1_i2 + tmpFD28);
               const double UpwindAlgInputhDD_ddnD010 = invdx0*(-3.0/2.0*hDD01_i0m1_i1_i2 + (1.0/2.0)*hDD01_i0m2_i1_i2 - 1.0/12.0*hDD01_i0m3_i1_i2 + (1.0/4.0)*hDD01_i0p1_i1_i2 + tmpFD29);
               const double UpwindAlgInputhDD_ddnD020 = invdx0*(-3.0/2.0*hDD02_i0m1_i1_i2 + (1.0/2.0)*hDD02_i0m2_i1_i2 - 1.0/12.0*hDD02_i0m3_i1_i2 + (1.0/4.0)*hDD02_i0p1_i1_i2 + tmpFD30);
               const double UpwindAlgInputhDD_ddnD110 = invdx0*(-3.0/2.0*hDD11_i0m1_i1_i2 + (1.0/2.0)*hDD11_i0m2_i1_i2 - 1.0/12.0*hDD11_i0m3_i1_i2 + (1.0/4.0)*hDD11_i0p1_i1_i2 + tmpFD31);
               const double UpwindAlgInputhDD_ddnD120 = invdx0*(-3.0/2.0*hDD12_i0m1_i1_i2 + (1.0/2.0)*hDD12_i0m2_i1_i2 - 1.0/12.0*hDD12_i0m3_i1_i2 + (1.0/4.0)*hDD12_i0p1_i1_i2 + tmpFD32);
               const double UpwindAlgInputhDD_ddnD220 = invdx0*(-3.0/2.0*hDD22_i0m1_i1_i2 + (1.0/2.0)*hDD22_i0m2_i1_i2 - 1.0/12.0*hDD22_i0m3_i1_i2 + (1.0/4.0)*hDD22_i0p1_i1_i2 + tmpFD33);
               const double UpwindAlgInputhDD_dupD000 = invdx0*(-1.0/4.0*hDD00_i0m1_i1_i2 + (3.0/2.0)*hDD00_i0p1_i1_i2 - 1.0/2.0*hDD00_i0p2_i1_i2 + (1.0/12.0)*hDD00_i0p3_i1_i2 - tmpFD28);
               const double UpwindAlgInputhDD_dupD010 = invdx0*(-1.0/4.0*hDD01_i0m1_i1_i2 + (3.0/2.0)*hDD01_i0p1_i1_i2 - 1.0/2.0*hDD01_i0p2_i1_i2 + (1.0/12.0)*hDD01_i0p3_i1_i2 - tmpFD29);
               const double UpwindAlgInputhDD_dupD020 = invdx0*(-1.0/4.0*hDD02_i0m1_i1_i2 + (3.0/2.0)*hDD02_i0p1_i1_i2 - 1.0/2.0*hDD02_i0p2_i1_i2 + (1.0/12.0)*hDD02_i0p3_i1_i2 - tmpFD30);
               const double UpwindAlgInputhDD_dupD110 = invdx0*(-1.0/4.0*hDD11_i0m1_i1_i2 + (3.0/2.0)*hDD11_i0p1_i1_i2 - 1.0/2.0*hDD11_i0p2_i1_i2 + (1.0/12.0)*hDD11_i0p3_i1_i2 - tmpFD31);
               const double UpwindAlgInputhDD_dupD120 = invdx0*(-1.0/4.0*hDD12_i0m1_i1_i2 + (3.0/2.0)*hDD12_i0p1_i1_i2 - 1.0/2.0*hDD12_i0p2_i1_i2 + (1.0/12.0)*hDD12_i0p3_i1_i2 - tmpFD32);
               const double UpwindAlgInputhDD_dupD220 = invdx0*(-1.0/4.0*hDD22_i0m1_i1_i2 + (3.0/2.0)*hDD22_i0p1_i1_i2 - 1.0/2.0*hDD22_i0p2_i1_i2 + (1.0/12.0)*hDD22_i0p3_i1_i2 - tmpFD33);
               const double lambdaU_dD00 = invdx0*(-2.0/3.0*lambdaU0_i0m1_i1_i2 + (1.0/12.0)*lambdaU0_i0m2_i1_i2 + (2.0/3.0)*lambdaU0_i0p1_i1_i2 - 1.0/12.0*lambdaU0_i0p2_i1_i2);
               const double lambdaU_dD10 = invdx0*(-2.0/3.0*lambdaU1_i0m1_i1_i2 + (1.0/12.0)*lambdaU1_i0m2_i1_i2 + (2.0/3.0)*lambdaU1_i0p1_i1_i2 - 1.0/12.0*lambdaU1_i0p2_i1_i2);
               const double lambdaU_dD20 = invdx0*(-2.0/3.0*lambdaU2_i0m1_i1_i2 + (1.0/12.0)*lambdaU2_i0m2_i1_i2 + (2.0/3.0)*lambdaU2_i0p1_i1_i2 - 1.0/12.0*lambdaU2_i0p2_i1_i2);
               const double UpwindAlgInputlambdaU_ddnD00 = invdx0*(-3.0/2.0*lambdaU0_i0m1_i1_i2 + (1.0/2.0)*lambdaU0_i0m2_i1_i2 - 1.0/12.0*lambdaU0_i0m3_i1_i2 + (1.0/4.0)*lambdaU0_i0p1_i1_i2 + tmpFD34);
               const double UpwindAlgInputlambdaU_ddnD10 = invdx0*(-3.0/2.0*lambdaU1_i0m1_i1_i2 + (1.0/2.0)*lambdaU1_i0m2_i1_i2 - 1.0/12.0*lambdaU1_i0m3_i1_i2 + (1.0/4.0)*lambdaU1_i0p1_i1_i2 + tmpFD35);
               const double UpwindAlgInputlambdaU_ddnD20 = invdx0*(-3.0/2.0*lambdaU2_i0m1_i1_i2 + (1.0/2.0)*lambdaU2_i0m2_i1_i2 - 1.0/12.0*lambdaU2_i0m3_i1_i2 + (1.0/4.0)*lambdaU2_i0p1_i1_i2 + tmpFD36);
               const double UpwindAlgInputlambdaU_dupD00 = invdx0*(-1.0/4.0*lambdaU0_i0m1_i1_i2 + (3.0/2.0)*lambdaU0_i0p1_i1_i2 - 1.0/2.0*lambdaU0_i0p2_i1_i2 + (1.0/12.0)*lambdaU0_i0p3_i1_i2 - tmpFD34);
               const double UpwindAlgInputlambdaU_dupD10 = invdx0*(-1.0/4.0*lambdaU1_i0m1_i1_i2 + (3.0/2.0)*lambdaU1_i0p1_i1_i2 - 1.0/2.0*lambdaU1_i0p2_i1_i2 + (1.0/12.0)*lambdaU1_i0p3_i1_i2 - tmpFD35);
               const double UpwindAlgInputlambdaU_dupD20 = invdx0*(-1.0/4.0*lambdaU2_i0m1_i1_i2 + (3.0/2.0)*lambdaU2_i0p1_i1_i2 - 1.0/2.0*lambdaU2_i0p2_i1_i2 + (1.0/12.0)*lambdaU2_i0p3_i1_i2 - tmpFD36);
               const double trK_dD0 = invdx0*(-2.0/3.0*trK_i0m1_i1_i2 + (1.0/12.0)*trK_i0m2_i1_i2 + (2.0/3.0)*trK_i0p1_i1_i2 - 1.0/12.0*trK_i0p2_i1_i2);
               const double UpwindAlgInputtrK_ddnD0 = invdx0*(tmpFD37 - 3.0/2.0*trK_i0m1_i1_i2 + (1.0/2.0)*trK_i0m2_i1_i2 - 1.0/12.0*trK_i0m3_i1_i2 + (1.0/4.0)*trK_i0p1_i1_i2);
               const double UpwindAlgInputtrK_dupD0 = invdx0*(-tmpFD37 - 1.0/4.0*trK_i0m1_i1_i2 + (3.0/2.0)*trK_i0p1_i1_i2 - 1.0/2.0*trK_i0p2_i1_i2 + (1.0/12.0)*trK_i0p3_i1_i2);
               const double uu_dD0 = invdx0*(tmpFD38 + tmpFD39 - 2.0/3.0*uu_i0m1_i1_i2 + (2.0/3.0)*uu_i0p1_i1_i2);
               const double uu_dDD00 = tmpFD8*(-tmpFD38 + tmpFD39 - 5.0/2.0*uu + (4.0/3.0)*uu_i0m1_i1_i2 + (4.0/3.0)*uu_i0p1_i1_i2);
               const double UpwindAlgInputuu_ddnD0 = invdx0*(tmpFD40 - 3.0/2.0*uu_i0m1_i1_i2 + (1.0/2.0)*uu_i0m2_i1_i2 - 1.0/12.0*uu_i0m3_i1_i2 + (1.0/4.0)*uu_i0p1_i1_i2);
               const double UpwindAlgInputuu_dupD0 = invdx0*(-tmpFD40 - 1.0/4.0*uu_i0m1_i1_i2 + (3.0/2.0)*uu_i0p1_i1_i2 - 1.0/2.0*uu_i0p2_i1_i2 + (1.0/12.0)*uu_i0p3_i1_i2);
               const double vetU_dD00 = invdx0*(tmpFD41 + tmpFD42 - 2.0/3.0*vetU0_i0m1_i1_i2 + (2.0/3.0)*vetU0_i0p1_i1_i2);
               const double vetU_dD10 = invdx0*(tmpFD43 + tmpFD44 - 2.0/3.0*vetU1_i0m1_i1_i2 + (2.0/3.0)*vetU1_i0p1_i1_i2);
               const double vetU_dD20 = invdx0*(tmpFD45 + tmpFD46 - 2.0/3.0*vetU2_i0m1_i1_i2 + (2.0/3.0)*vetU2_i0p1_i1_i2);
               const double vetU_dDD000 = tmpFD8*(-tmpFD41 + tmpFD42 - 5.0/2.0*vetU0 + (4.0/3.0)*vetU0_i0m1_i1_i2 + (4.0/3.0)*vetU0_i0p1_i1_i2);
               const double vetU_dDD100 = tmpFD8*(-tmpFD43 + tmpFD44 - 5.0/2.0*vetU1 + (4.0/3.0)*vetU1_i0m1_i1_i2 + (4.0/3.0)*vetU1_i0p1_i1_i2);
               const double vetU_dDD200 = tmpFD8*(-tmpFD45 + tmpFD46 - 5.0/2.0*vetU2 + (4.0/3.0)*vetU2_i0m1_i1_i2 + (4.0/3.0)*vetU2_i0p1_i1_i2);
               const double UpwindAlgInputvetU_ddnD00 = invdx0*(tmpFD47 - 3.0/2.0*vetU0_i0m1_i1_i2 + (1.0/2.0)*vetU0_i0m2_i1_i2 - 1.0/12.0*vetU0_i0m3_i1_i2 + (1.0/4.0)*vetU0_i0p1_i1_i2);
               const double UpwindAlgInputvetU_ddnD10 = invdx0*(tmpFD48 - 3.0/2.0*vetU1_i0m1_i1_i2 + (1.0/2.0)*vetU1_i0m2_i1_i2 - 1.0/12.0*vetU1_i0m3_i1_i2 + (1.0/4.0)*vetU1_i0p1_i1_i2);
               const double UpwindAlgInputvetU_ddnD20 = invdx0*(tmpFD49 - 3.0/2.0*vetU2_i0m1_i1_i2 + (1.0/2.0)*vetU2_i0m2_i1_i2 - 1.0/12.0*vetU2_i0m3_i1_i2 + (1.0/4.0)*vetU2_i0p1_i1_i2);
               const double UpwindAlgInputvetU_dupD00 = invdx0*(-tmpFD47 - 1.0/4.0*vetU0_i0m1_i1_i2 + (3.0/2.0)*vetU0_i0p1_i1_i2 - 1.0/2.0*vetU0_i0p2_i1_i2 + (1.0/12.0)*vetU0_i0p3_i1_i2);
               const double UpwindAlgInputvetU_dupD10 = invdx0*(-tmpFD48 - 1.0/4.0*vetU1_i0m1_i1_i2 + (3.0/2.0)*vetU1_i0p1_i1_i2 - 1.0/2.0*vetU1_i0p2_i1_i2 + (1.0/12.0)*vetU1_i0p3_i1_i2);
               const double UpwindAlgInputvetU_dupD20 = invdx0*(-tmpFD49 - 1.0/4.0*vetU2_i0m1_i1_i2 + (3.0/2.0)*vetU2_i0p1_i1_i2 - 1.0/2.0*vetU2_i0p2_i1_i2 + (1.0/12.0)*vetU2_i0p3_i1_i2);
               const double vv_dD0 = invdx0*(-2.0/3.0*vv_i0m1_i1_i2 + (1.0/12.0)*vv_i0m2_i1_i2 + (2.0/3.0)*vv_i0p1_i1_i2 - 1.0/12.0*vv_i0p2_i1_i2);
               const double UpwindControlVectorU0 = vetU0;
               /* 
                * NRPy+ Finite Difference Code Generation, Step 2 of 3: Implement upwinding algorithm:
                */
               const double UpWind0 = UPWIND_ALG(UpwindControlVectorU0);
               const double aDD_dupD000 = UpWind0*(-UpwindAlgInputaDD_ddnD000 + UpwindAlgInputaDD_dupD000) + UpwindAlgInputaDD_ddnD000;
               const double aDD_dupD010 = UpWind0*(-UpwindAlgInputaDD_ddnD010 + UpwindAlgInputaDD_dupD010) + UpwindAlgInputaDD_ddnD010;
               const double aDD_dupD020 = UpWind0*(-UpwindAlgInputaDD_ddnD020 + UpwindAlgInputaDD_dupD020) + UpwindAlgInputaDD_ddnD020;
               const double aDD_dupD110 = UpWind0*(-UpwindAlgInputaDD_ddnD110 + UpwindAlgInputaDD_dupD110) + UpwindAlgInputaDD_ddnD110;
               const double aDD_dupD120 = UpWind0*(-UpwindAlgInputaDD_ddnD120 + UpwindAlgInputaDD_dupD120) + UpwindAlgInputaDD_ddnD120;
               const double aDD_dupD220 = UpWind0*(-UpwindAlgInputaDD_ddnD220 + UpwindAlgInputaDD_dupD220) + UpwindAlgInputaDD_ddnD220;
               const double alpha_dupD0 = UpWind0*(-UpwindAlgInputalpha_ddnD0 + UpwindAlgInputalpha_dupD0) + UpwindAlgInputalpha_ddnD0;
               const double betU_dupD00 = UpWind0*(-UpwindAlgInputbetU_ddnD00 + UpwindAlgInputbetU_dupD00) + UpwindAlgInputbetU_ddnD00;
               const double betU_dupD10 = UpWind0*(-UpwindAlgInputbetU_ddnD10 + UpwindAlgInputbetU_dupD10) + UpwindAlgInputbetU_ddnD10;
               const double betU_dupD20 = UpWind0*(-UpwindAlgInputbetU_ddnD20 + UpwindAlgInputbetU_dupD20) + UpwindAlgInputbetU_ddnD20;
               const double cf_dupD0 = UpWind0*(-UpwindAlgInputcf_ddnD0 + UpwindAlgInputcf_dupD0) + UpwindAlgInputcf_ddnD0;
               const double hDD_dupD000 = UpWind0*(-UpwindAlgInputhDD_ddnD000 + UpwindAlgInputhDD_dupD000) + UpwindAlgInputhDD_ddnD000;
               const double hDD_dupD010 = UpWind0*(-UpwindAlgInputhDD_ddnD010 + UpwindAlgInputhDD_dupD010) + UpwindAlgInputhDD_ddnD010;
               const double hDD_dupD020 = UpWind0*(-UpwindAlgInputhDD_ddnD020 + UpwindAlgInputhDD_dupD020) + UpwindAlgInputhDD_ddnD020;
               const double hDD_dupD110 = UpWind0*(-UpwindAlgInputhDD_ddnD110 + UpwindAlgInputhDD_dupD110) + UpwindAlgInputhDD_ddnD110;
               const double hDD_dupD120 = UpWind0*(-UpwindAlgInputhDD_ddnD120 + UpwindAlgInputhDD_dupD120) + UpwindAlgInputhDD_ddnD120;
               const double hDD_dupD220 = UpWind0*(-UpwindAlgInputhDD_ddnD220 + UpwindAlgInputhDD_dupD220) + UpwindAlgInputhDD_ddnD220;
               const double lambdaU_dupD00 = UpWind0*(-UpwindAlgInputlambdaU_ddnD00 + UpwindAlgInputlambdaU_dupD00) + UpwindAlgInputlambdaU_ddnD00;
               const double lambdaU_dupD10 = UpWind0*(-UpwindAlgInputlambdaU_ddnD10 + UpwindAlgInputlambdaU_dupD10) + UpwindAlgInputlambdaU_ddnD10;
               const double lambdaU_dupD20 = UpWind0*(-UpwindAlgInputlambdaU_ddnD20 + UpwindAlgInputlambdaU_dupD20) + UpwindAlgInputlambdaU_ddnD20;
               const double trK_dupD0 = UpWind0*(-UpwindAlgInputtrK_ddnD0 + UpwindAlgInputtrK_dupD0) + UpwindAlgInputtrK_ddnD0;
               const double uu_dupD0 = UpWind0*(-UpwindAlgInputuu_ddnD0 + UpwindAlgInputuu_dupD0) + UpwindAlgInputuu_ddnD0;
               const double vetU_dupD00 = UpWind0*(-UpwindAlgInputvetU_ddnD00 + UpwindAlgInputvetU_dupD00) + UpwindAlgInputvetU_ddnD00;
               const double vetU_dupD10 = UpWind0*(-UpwindAlgInputvetU_ddnD10 + UpwindAlgInputvetU_dupD10) + UpwindAlgInputvetU_ddnD10;
               const double vetU_dupD20 = UpWind0*(-UpwindAlgInputvetU_ddnD20 + UpwindAlgInputvetU_dupD20) + UpwindAlgInputvetU_ddnD20;
               /* 
                * NRPy+ Finite Difference Code Generation, Step 3 of 3: Evaluate SymPy expressions and write to main memory:
                */
               const double tmp0 = 2*vetU_dD00;
               const double tmp1 = alpha*trK;
               const double tmp2 = 1.0/xx0;
               const double tmp3 = pow(xx0, 2);
               const double tmp4 = 1.0/tmp3;
               const double tmp5 = tmp4*vetU1;
               const double tmp6 = -tmp5;
               const double tmp7 = tmp2*vetU_dD10 + tmp6;
               const double tmp8 = 2*xx0;
               const double tmp9 = aDD01*tmp8;
               const double tmp10 = 2*tmp2;
               const double tmp11 = tmp10*vetU0;
               const double tmp12 = sin(xx1);
               const double tmp13 = 1.0/tmp12;
               const double tmp14 = tmp13*tmp2;
               const double tmp15 = cos(xx1);
               const double tmp16 = tmp15*vetU1;
               const double tmp17 = tmp14*tmp16;
               const double tmp18 = tmp11 + tmp17 + vetU_dD00;
               const double tmp19 = (2.0/3.0)*tmp18;
               const double tmp20 = tmp13*tmp4;
               const double tmp21 = -tmp20*vetU2;
               const double tmp22 = tmp14*vetU_dD20 + tmp21;
               const double tmp23 = aDD02*tmp12;
               const double tmp24 = tmp23*tmp8;
               const double tmp25 = 2*hDD01;
               const double tmp26 = pow(tmp12, 2);
               const double tmp27 = pow(xx0, 4);
               const double tmp28 = tmp26*tmp27;
               const double tmp29 = hDD02*hDD12;
               const double tmp30 = hDD00 + 1;
               const double tmp31 = pow(hDD12, 2)*tmp28;
               const double tmp32 = hDD11*tmp3;
               const double tmp33 = tmp3 + tmp32;
               const double tmp34 = tmp26*tmp3;
               const double tmp35 = pow(hDD02, 2)*tmp34;
               const double tmp36 = hDD22*tmp34;
               const double tmp37 = tmp34 + tmp36;
               const double tmp38 = pow(hDD01, 2)*tmp3;
               const double tmp39 = tmp30*tmp37;
               const double tmp40 = tmp25*tmp28*tmp29 - tmp30*tmp31 - tmp33*tmp35 + tmp33*tmp39 - tmp37*tmp38;
               const double tmp41 = 1.0/tmp40;
               const double tmp42 = hDD02*tmp12;
               const double tmp43 = tmp3*tmp42;
               const double tmp44 = hDD12*tmp12;
               const double tmp45 = tmp3*tmp44;
               const double tmp46 = hDD01*tmp43 - tmp30*tmp45;
               const double tmp47 = tmp41*tmp46;
               const double tmp48 = aDD01*xx0;
               const double tmp49 = pow(xx0, 3);
               const double tmp50 = tmp42*xx0;
               const double tmp51 = hDD01*tmp44*tmp49 - tmp33*tmp50;
               const double tmp52 = tmp41*tmp51;
               const double tmp53 = tmp30*tmp33 - tmp38;
               const double tmp54 = tmp41*tmp53;
               const double tmp55 = tmp23*xx0;
               const double tmp56 = alpha*tmp24;
               const double tmp57 = pow(uu_dD0, 2);
               const double tmp58 = pow(cf, 2);
               const double tmp59 = 1.0/tmp58;
               const double tmp60 = pow(scalarmass, 2);
               const double tmp61 = pot1_on*tmp60;
               const double tmp62 = tmp61*pow(uu, 2);
               const double tmp63 = uu/fa;
               const double tmp64 = pot2_on*tmp60;
               const double tmp65 = pow(fa, 2)*tmp64*(1.0 - cos(tmp63));
               const double tmp66 = tmp59*(0.5*tmp62 + tmp65);
               const double tmp67 = tmp30*tmp59;
               const double tmp68 = pow(vv, 2);
               const double tmp69 = -tmp31 + tmp33*tmp37;
               const double tmp70 = tmp41*tmp69;
               const double tmp71 = tmp58*tmp70;
               const double tmp72 = tmp57*tmp71;
               const double tmp73 = 0.5*tmp68 - 0.5*tmp72;
               const double tmp74 = -1.5*tmp62 - 3.0*tmp65 + 1.5*tmp68 - 0.5*tmp72;
               const double tmp75 = (1.0/3.0)*tmp74;
               const double tmp76 = M_PI*br_on;
               const double tmp77 = 8*alpha*tmp58*tmp76;
               const double tmp78 = tmp26*tmp49;
               const double tmp79 = hDD01*xx0;
               const double tmp80 = tmp29*tmp78 - tmp37*tmp79;
               const double tmp81 = tmp41*tmp80;
               const double tmp82 = -tmp35 + tmp39;
               const double tmp83 = tmp41*tmp82;
               const double tmp84 = alpha*tmp9;
               const double tmp85 = tmp52*tmp55;
               const double tmp86 = tmp48*tmp81;
               const double tmp87 = aDD00*tmp70;
               const double tmp88 = 2*alpha;
               const double tmp89 = aDD00*tmp88;
               const double tmp90 = hDD12*tmp15;
               const double tmp91 = tmp3*tmp90;
               const double tmp92 = tmp52*tmp91;
               const double tmp93 = hDD11*tmp8;
               const double tmp94 = hDD_dD110*tmp3;
               const double tmp95 = -tmp8 - tmp93 - tmp94;
               const double tmp96 = (1.0/2.0)*tmp70;
               const double tmp97 = tmp95*tmp96;
               const double tmp98 = -tmp92 - tmp97;
               const double tmp99 = alpha_dD0*tmp98;
               const double tmp100 = 1.0/cf;
               const double tmp101 = cf_dD0*tmp100;
               const double tmp102 = alpha*tmp101;
               const double tmp103 = lambdaU0*tmp2;
               const double tmp104 = lambdaU2*tmp2;
               const double tmp105 = 1.0/tmp26;
               const double tmp106 = tmp105*tmp15;
               const double tmp107 = pow(tmp12, 3);
               const double tmp108 = 1.0/tmp107;
               const double tmp109 = 2*xx1;
               const double tmp110 = sin(tmp109);
               const double tmp111 = (1.0/2.0)*tmp110;
               const double tmp112 = -tmp104*tmp106 + tmp104*tmp108*tmp111;
               const double tmp113 = hDD01*tmp8;
               const double tmp114 = 2*hDD_dD010;
               const double tmp115 = (1.0/2.0)*tmp81;
               const double tmp116 = -4*tmp79;
               const double tmp117 = hDD_dD010*xx0;
               const double tmp118 = hDD01 + tmp117;
               const double tmp119 = tmp110*tmp13;
               const double tmp120 = hDD12*xx0;
               const double tmp121 = tmp119*tmp120;
               const double tmp122 = tmp110*tmp3;
               const double tmp123 = tmp122*tmp13;
               const double tmp124 = hDD_dD120*tmp123;
               const double tmp125 = (1.0/2.0)*tmp52;
               const double tmp126 = hDD_dD110*tmp49;
               const double tmp127 = hDD00*xx0 - hDD11*xx0;
               const double tmp128 = (1.0/2.0)*tmp83;
               const double tmp129 = tmp44*tmp8;
               const double tmp130 = hDD_dD120*tmp12;
               const double tmp131 = tmp130*tmp3;
               const double tmp132 = tmp129 + tmp131;
               const double tmp133 = tmp110*tmp132;
               const double tmp134 = tmp93 + tmp94;
               const double tmp135 = tmp134*tmp2;
               const double tmp136 = pow(tmp110, 2);
               const double tmp137 = tmp108*tmp136;
               const double tmp138 = (1.0/2.0)*hDD12;
               const double tmp139 = tmp138*tmp3;
               const double tmp140 = tmp137*tmp139;
               const double tmp141 = -tmp123*tmp138 + tmp43 + tmp91;
               const double tmp142 = tmp110*tmp141;
               const double tmp143 = (1.0/2.0)*tmp47;
               const double tmp144 = hDD01*tmp122;
               const double tmp145 = hDD22*tmp122;
               const double tmp146 = hDD01*tmp34 + tmp111*tmp32 - 1.0/2.0*tmp145;
               const double tmp147 = tmp110*tmp146;
               const double tmp148 = -tmp105*tmp147;
               const double tmp149 = (1.0/2.0)*tmp54;
               const double tmp150 = tmp122*tmp90;
               const double tmp151 = tmp44*xx0;
               const double tmp152 = tmp111*tmp13*xx0;
               const double tmp153 = -hDD02*tmp152 - tmp151;
               const double tmp154 = cos(tmp109);
               const double tmp155 = tmp105*tmp154;
               const double tmp156 = tmp108*tmp110*tmp15;
               const double tmp157 = -tmp155 + tmp156;
               const double tmp158 = tmp157*tmp45;
               const double tmp159 = tmp155 - tmp156;
               const double tmp160 = -tmp159*tmp45;
               const double tmp161 = tmp115*tmp95 + tmp47*tmp91;
               const double tmp162 = tmp125*tmp95 + tmp54*tmp91;
               const double tmp163 = tmp161*tmp33;
               const double tmp164 = tmp92 + tmp97;
               const double tmp165 = tmp164 + xx0;
               const double tmp166 = tmp162*tmp45 + tmp163 + tmp165*tmp79;
               const double tmp167 = 3*tmp83;
               const double tmp168 = hDD22*tmp15;
               const double tmp169 = tmp12*tmp3;
               const double tmp170 = 2*tmp169;
               const double tmp171 = tmp168*tmp170;
               const double tmp172 = tmp122 + tmp171;
               const double tmp173 = hDD02*tmp15;
               const double tmp174 = tmp173*xx0;
               const double tmp175 = -tmp129 - tmp131 + tmp174;
               const double tmp176 = tmp115*tmp175 + tmp143*tmp172;
               const double tmp177 = tmp166*tmp176;
               const double tmp178 = 3*tmp47;
               const double tmp179 = -tmp2;
               const double tmp180 = (1.0/2.0)*tmp132 + (1.0/2.0)*tmp174;
               const double tmp181 = (1.0/2.0)*tmp134 + (1.0/2.0)*tmp8;
               const double tmp182 = tmp180*tmp47 + tmp181*tmp83;
               const double tmp183 = tmp179 + tmp182;
               const double tmp184 = tmp166*tmp183;
               const double tmp185 = 3*tmp81;
               const double tmp186 = tmp180*tmp54 + tmp181*tmp47;
               const double tmp187 = tmp186*tmp45;
               const double tmp188 = tmp180*tmp52;
               const double tmp189 = tmp181*tmp81;
               const double tmp190 = tmp188 + tmp189;
               const double tmp191 = tmp183*tmp33;
               const double tmp192 = tmp187 + tmp190*tmp79 + tmp191;
               const double tmp193 = tmp161*tmp192;
               const double tmp194 = tmp176*tmp192;
               const double tmp195 = 3*tmp52;
               const double tmp196 = tmp176*tmp33;
               const double tmp197 = tmp105*tmp111;
               const double tmp198 = tmp125*tmp175 + tmp149*tmp172;
               const double tmp199 = -tmp197 + tmp198;
               const double tmp200 = tmp199*tmp45;
               const double tmp201 = tmp125*tmp172;
               const double tmp202 = tmp175*tmp96;
               const double tmp203 = tmp201 + tmp202;
               const double tmp204 = tmp196 + tmp200 + tmp203*tmp79;
               const double tmp205 = tmp161*tmp204;
               const double tmp206 = tmp183*tmp192;
               const double tmp207 = 3*tmp70;
               const double tmp208 = tmp176*tmp204;
               const double tmp209 = 3*tmp54;
               const double tmp210 = tmp183*tmp204;
               const double tmp211 = tmp161*tmp79 + tmp162*tmp50 + tmp165*tmp30;
               const double tmp212 = 2*tmp165;
               const double tmp213 = tmp190*tmp211;
               const double tmp214 = tmp190*tmp192;
               const double tmp215 = tmp161*tmp45 + tmp162*tmp37 + tmp165*tmp50;
               const double tmp216 = 2*tmp162;
               const double tmp217 = tmp203*tmp211;
               const double tmp218 = tmp192*tmp203;
               const double tmp219 = tmp186*tmp215;
               const double tmp220 = tmp186*tmp204;
               const double tmp221 = tmp183*tmp45 + tmp186*tmp37 + tmp190*tmp50;
               const double tmp222 = tmp162*tmp221;
               const double tmp223 = tmp132 - tmp174;
               const double tmp224 = tmp26*tmp8;
               const double tmp225 = hDD22*tmp26;
               const double tmp226 = tmp225*tmp8;
               const double tmp227 = hDD_dD220*tmp34;
               const double tmp228 = tmp226 + tmp227;
               const double tmp229 = tmp224 + tmp228;
               const double tmp230 = tmp143*tmp223 + tmp149*tmp229;
               const double tmp231 = tmp179 + tmp230;
               const double tmp232 = tmp125*tmp229;
               const double tmp233 = tmp115*tmp223;
               const double tmp234 = tmp232 + tmp233;
               const double tmp235 = tmp128*tmp223 + tmp143*tmp229;
               const double tmp236 = tmp231*tmp45 + tmp234*tmp79 + tmp235*tmp33;
               const double tmp237 = tmp199*tmp215;
               const double tmp238 = tmp199*tmp204;
               const double tmp239 = tmp186*tmp221;
               const double tmp240 = tmp186*tmp236;
               const double tmp241 = tmp176*tmp79 + tmp199*tmp50 + tmp203*tmp30;
               const double tmp242 = tmp165*tmp241;
               const double tmp243 = tmp199*tmp221;
               const double tmp244 = tmp199*tmp236;
               const double tmp245 = tmp190*tmp241;
               const double tmp246 = tmp190*tmp236;
               const double tmp247 = tmp176*tmp45;
               const double tmp248 = tmp199*tmp37;
               const double tmp249 = tmp203*tmp50 + tmp247 + tmp248;
               const double tmp250 = tmp162*tmp249;
               const double tmp251 = -tmp122 - tmp171;
               const double tmp252 = -tmp224 - tmp226 - tmp227;
               const double tmp253 = tmp125*tmp252 + tmp143*tmp251;
               const double tmp254 = tmp26*xx0;
               const double tmp255 = tmp115*tmp251;
               const double tmp256 = tmp252*tmp96;
               const double tmp257 = tmp255 + tmp256;
               const double tmp258 = tmp254 + tmp257;
               const double tmp259 = tmp115*tmp252 + tmp128*tmp251;
               const double tmp260 = tmp111 + tmp259;
               const double tmp261 = tmp253*tmp45 + tmp258*tmp79 + tmp260*tmp33;
               const double tmp262 = tmp203*tmp241;
               const double tmp263 = tmp203*tmp236;
               const double tmp264 = tmp186*tmp249;
               const double tmp265 = tmp186*tmp261;
               const double tmp266 = tmp199*tmp249;
               const double tmp267 = tmp199*tmp261;
               const double tmp268 = tmp190*tmp30;
               const double tmp269 = tmp183*tmp79 + tmp186*tmp50 + tmp268;
               const double tmp270 = tmp165*tmp269;
               const double tmp271 = hDD_dD010*tmp8 + tmp25;
               const double tmp272 = 2*tmp42;
               const double tmp273 = hDD_dD020*tmp12;
               const double tmp274 = tmp272 + tmp273*tmp8;
               const double tmp275 = hDD_dD000*tmp125 + tmp143*tmp271 + tmp149*tmp274;
               const double tmp276 = hDD_dD000*tmp115 + tmp128*tmp271 + tmp143*tmp274;
               const double tmp277 = tmp125*tmp274;
               const double tmp278 = tmp115*tmp271;
               const double tmp279 = hDD_dD000*tmp96;
               const double tmp280 = tmp277 + tmp278 + tmp279;
               const double tmp281 = tmp275*tmp45 + tmp276*tmp33 + tmp280*tmp79;
               const double tmp282 = tmp190*tmp269;
               const double tmp283 = tmp190*tmp281;
               const double tmp284 = tmp203*tmp269;
               const double tmp285 = tmp203*tmp281;
               const double tmp286 = tmp186*tmp81;
               const double tmp287 = tmp199*tmp47;
               const double tmp288 = tmp231*tmp52;
               const double tmp289 = tmp128*tmp162 + tmp149*tmp253 + tmp275*tmp96 + tmp286 + tmp287 + tmp288;
               const double tmp290 = tmp176*tmp47;
               const double tmp291 = tmp235*tmp52;
               const double tmp292 = tmp183*tmp81;
               const double tmp293 = tmp128*tmp161 + tmp149*tmp260 + tmp276*tmp96 + tmp290 + tmp291 + tmp292;
               const double tmp294 = tmp190*tmp81;
               const double tmp295 = tmp203*tmp47;
               const double tmp296 = tmp234*tmp52;
               const double tmp297 = tmp128*tmp165 + tmp149*tmp258 + tmp280*tmp96 + tmp294 + tmp295 + tmp296;
               const double tmp298 = alpha*(-lambdaU1*tmp79 + tmp103*tmp33 + tmp112*tmp45 - tmp115*(-tmp113 + tmp114*tmp3) - tmp115*(tmp116 + tmp118*tmp8) - tmp125*(tmp121 - tmp124) - tmp125*(-tmp105*tmp133 + 3*tmp121) - tmp128*(tmp126 + tmp127*tmp8) - tmp143*(-tmp105*tmp142 + tmp140) - tmp143*(-tmp105*tmp150 + tmp140 + tmp153*tmp8 + tmp158 + tmp160) - tmp149*(tmp126*tmp26 + tmp144 + tmp148) + tmp161*tmp166*tmp167 + tmp177*tmp178 + tmp178*tmp205 + tmp184*tmp185 + tmp185*tmp193 + tmp194*tmp195 + tmp195*tmp210 + tmp206*tmp207 + tmp208*tmp209 + tmp289*(tmp113*tmp203 + 2*tmp196 + 2*tmp200) + tmp293*(tmp113*tmp165 + 2*tmp163 + tmp216*tmp45) + tmp297*(tmp113*tmp190 + 2*tmp187 + 2*tmp191) + tmp47*(tmp217 + 2*tmp218) + tmp47*(tmp237 + 2*tmp238) + tmp47*(tmp212*tmp236 + tmp242) + tmp47*(tmp216*tmp261 + tmp250) + tmp52*(tmp243 + 2*tmp244) + tmp52*(tmp245 + 2*tmp246) + tmp52*(tmp264 + 2*tmp265) + tmp52*(tmp284 + 2*tmp285) + tmp54*(tmp262 + 2*tmp263) + tmp54*(tmp266 + 2*tmp267) + tmp70*(tmp239 + 2*tmp240) + tmp70*(tmp282 + 2*tmp283) + tmp81*(tmp213 + 2*tmp214) + tmp81*(tmp219 + 2*tmp220) + tmp81*(tmp212*tmp281 + tmp270) + tmp81*(tmp216*tmp236 + tmp222) + tmp83*(tmp162*tmp215 + tmp204*tmp216) + tmp83*(tmp165*tmp211 + tmp192*tmp212) - tmp96*(4*hDD11 + hDD_dD110*tmp8 + hDD_dDD1100*tmp3 - 2*tmp135)) + tmp102*tmp98 - tmp99;
               const double tmp299 = -tmp255 - tmp256;
               const double tmp300 = alpha_dD0*tmp299;
               const double tmp301 = tmp197*tmp2;
               const double tmp302 = lambdaU1*tmp301 + tmp103;
               const double tmp303 = tmp107*tmp3;
               const double tmp304 = hDD_dD020*tmp303;
               const double tmp305 = 2*hDD02*tmp303 + tmp122*tmp44;
               const double tmp306 = tmp2*tmp305;
               const double tmp307 = -tmp306;
               const double tmp308 = hDD_dD220*tmp122;
               const double tmp309 = hDD_dD220*tmp15*tmp170;
               const double tmp310 = -tmp145 + tmp171;
               const double tmp311 = tmp2*tmp310;
               const double tmp312 = -tmp311;
               const double tmp313 = tmp105*tmp110;
               const double tmp314 = tmp2*tmp228;
               const double tmp315 = hDD02*tmp107*tmp8;
               const double tmp316 = tmp273*xx0 + tmp42;
               const double tmp317 = tmp12*xx0;
               const double tmp318 = tmp153 + tmp174;
               const double tmp319 = -tmp197*tmp305;
               const double tmp320 = pow(tmp12, 4);
               const double tmp321 = hDD_dD220*tmp49;
               const double tmp322 = hDD00*tmp254 - hDD22*tmp254 + tmp111*tmp79;
               const double tmp323 = tmp13*tmp15;
               const double tmp324 = tmp145*tmp323;
               const double tmp325 = 2*tmp34;
               const double tmp326 = 2*pow(tmp15, 2);
               const double tmp327 = tmp157*tmp36;
               const double tmp328 = -tmp159*tmp36;
               const double tmp329 = tmp249*tmp253;
               const double tmp330 = tmp235*tmp45;
               const double tmp331 = tmp231*tmp37;
               const double tmp332 = tmp234*tmp50 + tmp330 + tmp331;
               const double tmp333 = tmp253*tmp332;
               const double tmp334 = tmp231*tmp249;
               const double tmp335 = tmp199*tmp332;
               const double tmp336 = tmp231*tmp332;
               const double tmp337 = tmp253*tmp37;
               const double tmp338 = tmp258*tmp50 + tmp260*tmp45 + tmp337;
               const double tmp339 = tmp199*tmp338;
               const double tmp340 = tmp231*tmp338;
               const double tmp341 = tmp176*tmp215;
               const double tmp342 = tmp215*tmp235;
               const double tmp343 = tmp204*tmp235;
               const double tmp344 = tmp176*tmp221;
               const double tmp345 = tmp176*tmp236;
               const double tmp346 = 2*tmp260;
               const double tmp347 = tmp204*tmp260;
               const double tmp348 = tmp221*tmp234;
               const double tmp349 = tmp234*tmp241;
               const double tmp350 = tmp203*tmp221;
               const double tmp351 = tmp221*tmp235;
               const double tmp352 = tmp235*tmp236;
               const double tmp353 = 2*tmp258;
               const double tmp354 = tmp241*tmp258;
               const double tmp355 = tmp236*tmp260;
               const double tmp356 = tmp176*tmp249;
               const double tmp357 = tmp176*tmp261;
               const double tmp358 = tmp234*tmp332;
               const double tmp359 = tmp253*tmp50 + tmp258*tmp30 + tmp260*tmp79;
               const double tmp360 = tmp234*tmp359;
               const double tmp361 = tmp203*tmp332;
               const double tmp362 = tmp203*tmp359;
               const double tmp363 = tmp235*tmp249;
               const double tmp364 = tmp235*tmp261;
               const double tmp365 = tmp234*tmp30;
               const double tmp366 = tmp231*tmp50 + tmp235*tmp79 + tmp365;
               const double tmp367 = tmp203*tmp366;
               const double tmp368 = tmp275*tmp37 + tmp276*tmp45 + tmp280*tmp50;
               const double tmp369 = tmp203*tmp368;
               const double tmp370 = tmp234*tmp366;
               const double tmp371 = tmp234*tmp368;
               const double tmp372 = tmp258*tmp366;
               const double tmp373 = tmp42*tmp8;
               const double tmp374 = alpha*(-hDD02*lambdaU2*tmp254 - lambdaU2*tmp111*tmp120 - tmp115*(-tmp308 + tmp309 + tmp312) - tmp115*(4*tmp168*tmp317 - tmp228*tmp313 + tmp309 - 3*tmp311) - tmp125*(tmp122*tmp130 + 2*tmp304 + tmp307) - tmp125*(tmp133 + tmp224*tmp316 - 3*tmp306 + tmp315) - tmp128*(hDD22*(tmp3*tmp326 - tmp325) + tmp26*tmp321 - tmp310*tmp313 - 2*tmp324 + tmp327 + tmp328) - tmp143*(tmp142 + tmp224*tmp318 + tmp319) - tmp143*(tmp150 + 2*tmp154*tmp45 + 6*tmp173*tmp34 - 3.0/2.0*tmp305*tmp313) - tmp149*(tmp111*tmp310 + tmp147 + tmp224*tmp322 + tmp320*tmp321) + tmp167*tmp266 + tmp178*tmp329 + tmp178*tmp339 + tmp185*tmp334 + tmp185*tmp335 + tmp195*tmp333 + tmp195*tmp340 + tmp207*tmp336 + tmp209*tmp253*tmp338 + tmp289*(tmp258*tmp373 + 2*tmp337 + tmp346*tmp45) + tmp293*(tmp203*tmp373 + 2*tmp247 + 2*tmp248) + tmp297*(tmp234*tmp373 + 2*tmp330 + 2*tmp331) + tmp302*tmp37 + tmp47*(2*tmp356 + tmp357) + tmp47*(2*tmp361 + tmp362) + tmp47*(tmp215*tmp346 + tmp347) + tmp47*(tmp221*tmp353 + tmp354) + tmp52*(2*tmp358 + tmp360) + tmp52*(2*tmp363 + tmp364) + tmp52*(tmp221*tmp346 + tmp355) + tmp52*(tmp353*tmp368 + tmp372) + tmp54*(tmp249*tmp346 + tmp260*tmp261) + tmp54*(tmp258*tmp359 + tmp332*tmp353) + tmp70*(2*tmp351 + tmp352) + tmp70*(tmp370 + 2*tmp371) + tmp81*(2*tmp342 + tmp343) + tmp81*(2*tmp344 + tmp345) + tmp81*(2*tmp348 + tmp349) + tmp81*(tmp367 + 2*tmp369) + tmp83*(tmp208 + 2*tmp341) + tmp83*(tmp262 + 2*tmp350) - tmp96*(hDD_dD220*tmp224 + hDD_dDD2200*tmp34 + 4*tmp225 - 2*tmp314)) + tmp102*tmp299 - tmp300;
               const double tmp375 = alpha_dD0*tmp101;
               const double tmp376 = pow(cf_dD0, 2);
               const double tmp377 = -tmp277 - tmp278 - tmp279;
               const double tmp378 = alpha_dD0*tmp377;
               const double tmp379 = (1.0/2.0)*tmp100;
               const double tmp380 = tmp2*tmp42;
               const double tmp381 = tmp2*tmp316;
               const double tmp382 = hDD01*tmp2;
               const double tmp383 = tmp118*tmp2;
               const double tmp384 = hDD_dD000*xx0;
               const double tmp385 = tmp127*tmp2;
               const double tmp386 = tmp384 - 2*tmp385;
               const double tmp387 = hDD02*tmp119;
               const double tmp388 = tmp2*tmp318;
               const double tmp389 = -2*tmp388;
               const double tmp390 = tmp153*tmp2;
               const double tmp391 = -2*tmp390;
               const double tmp392 = hDD01*tmp110;
               const double tmp393 = tmp2*tmp322;
               const double tmp394 = hDD_dD000*tmp254;
               const double tmp395 = -2*tmp393 + tmp394;
               const double tmp396 = tmp234*tmp269;
               const double tmp397 = tmp190*tmp366;
               const double tmp398 = tmp269*tmp280;
               const double tmp399 = tmp280*tmp366;
               const double tmp400 = tmp280*tmp30;
               const double tmp401 = tmp275*tmp50 + tmp276*tmp79 + tmp400;
               const double tmp402 = tmp190*tmp401;
               const double tmp403 = tmp234*tmp401;
               const double tmp404 = tmp183*tmp211;
               const double tmp405 = tmp211*tmp235;
               const double tmp406 = tmp192*tmp235;
               const double tmp407 = tmp186*tmp241;
               const double tmp408 = tmp221*tmp231;
               const double tmp409 = tmp231*tmp241;
               const double tmp410 = tmp183*tmp241;
               const double tmp411 = tmp183*tmp236;
               const double tmp412 = tmp235*tmp241;
               const double tmp413 = tmp186*tmp332;
               const double tmp414 = tmp186*tmp359;
               const double tmp415 = tmp231*tmp359;
               const double tmp416 = 2*tmp276;
               const double tmp417 = tmp192*tmp276;
               const double tmp418 = tmp221*tmp275;
               const double tmp419 = 2*tmp275;
               const double tmp420 = tmp236*tmp276;
               const double tmp421 = tmp275*tmp332;
               const double tmp422 = tmp183*tmp269;
               const double tmp423 = tmp183*tmp281;
               const double tmp424 = tmp235*tmp269;
               const double tmp425 = tmp235*tmp281;
               const double tmp426 = tmp186*tmp366;
               const double tmp427 = tmp186*tmp368;
               const double tmp428 = tmp231*tmp366;
               const double tmp429 = tmp231*tmp368;
               const double tmp430 = alpha*tmp376*tmp59 + alpha*(hDD01*lambdaU_dD10 + hDD02*lambdaU_dD20 - hDD_dDD0000*tmp96 + lambdaU_dD00*tmp30 - tmp115*(-tmp114 + tmp2*tmp25) - tmp115*(4*tmp382 - 2*tmp383) - tmp125*(4*tmp380 - 2*tmp381) - tmp125*(tmp2*tmp272 - 2*tmp273) - tmp128*tmp386 - tmp143*(tmp387 + tmp389) - tmp143*(-2*tmp173 + tmp387 + tmp391) - tmp149*(-tmp392 + tmp395) + tmp167*tmp282 + tmp178*tmp396 + tmp178*tmp397 + tmp185*tmp398 + tmp185*tmp402 + tmp195*tmp399 + tmp195*tmp403 + tmp207*tmp280*tmp401 + tmp209*tmp370 + tmp289*(tmp113*tmp235 + tmp231*tmp373 + 2*tmp365) + tmp293*(tmp113*tmp183 + tmp186*tmp373 + 2*tmp268) + tmp297*(tmp113*tmp276 + tmp275*tmp373 + 2*tmp400) + tmp47*(2*tmp405 + tmp406) + tmp47*(tmp408 + 2*tmp409) + tmp47*(2*tmp410 + tmp411) + tmp47*(tmp413 + 2*tmp414) + tmp52*(2*tmp424 + tmp425) + tmp52*(2*tmp428 + tmp429) + tmp52*(tmp241*tmp416 + tmp420) + tmp52*(tmp359*tmp419 + tmp421) + tmp54*(tmp336 + 2*tmp415) + tmp54*(tmp352 + 2*tmp412) + tmp70*(tmp269*tmp416 + tmp276*tmp281) + tmp70*(tmp275*tmp368 + tmp366*tmp419) + tmp81*(2*tmp422 + tmp423) + tmp81*(2*tmp426 + tmp427) + tmp81*(tmp211*tmp416 + tmp417) + tmp81*(tmp241*tmp419 + tmp418) + tmp83*(tmp206 + 2*tmp404) + tmp83*(tmp239 + 2*tmp407)) - alpha_dDD00 - 2*tmp375 - tmp378 - tmp88*(-cf_dD0*tmp377*tmp379 + tmp379*(-cf_dDD00 + tmp100*tmp376));
               const double tmp431 = tmp236*tmp258 + tmp361;
               const double tmp432 = tmp253*tmp261;
               const double tmp433 = tmp161*tmp215;
               const double tmp434 = tmp165*tmp221 + tmp218;
               const double tmp435 = 2*tmp406;
               const double tmp436 = tmp183*tmp221;
               const double tmp437 = tmp231*tmp236;
               const double tmp438 = tmp190*tmp368;
               const double tmp439 = tmp234*tmp281;
               const double tmp440 = tmp396 + tmp439;
               const double tmp441 = tmp192*tmp260;
               const double tmp442 = tmp166*tmp260;
               const double tmp443 = tmp161*tmp221;
               const double tmp444 = tmp161*tmp249;
               const double tmp445 = tmp166*tmp235;
               const double tmp446 = 2*tmp445;
               const double tmp447 = tmp183*tmp215;
               const double tmp448 = 2*tmp343;
               const double tmp449 = tmp183*tmp249;
               const double tmp450 = tmp165*tmp368 + tmp285;
               const double tmp451 = tmp215*tmp231;
               const double tmp452 = tmp204*tmp231;
               const double tmp453 = tmp190*tmp221;
               const double tmp454 = tmp192*tmp234;
               const double tmp455 = tmp211*tmp234 + tmp454;
               const double tmp456 = tmp162*tmp332;
               const double tmp457 = tmp165*tmp332 + tmp263;
               const double tmp458 = tmp192*tmp258 + tmp350;
               const double tmp459 = tmp204*tmp253;
               const double tmp460 = tmp162*tmp338;
               const double tmp461 = tmp258*tmp269;
               const double tmp462 = tmp258*tmp281 + tmp369;
               const double tmp463 = tmp186*tmp338;
               const double tmp464 = tmp231*tmp261;
               const double tmp465 = tmp221*tmp253;
               const double tmp466 = tmp236*tmp253;
               const double tmp467 = tmp190*tmp332;
               const double tmp468 = tmp234*tmp236;
               const double tmp469 = tmp349 + tmp468;
               const double tmp470 = (1.0/2.0)*tmp105;
               const double tmp471 = tmp130*tmp49 - tmp141*tmp197 - tmp150*tmp470 + tmp173*tmp3 + tmp318*xx0 - tmp45;
               const double tmp472 = tmp148 + tmp15*tmp169*tmp25 + tmp154*tmp32 + tmp322*xx0 - tmp324;
               const double tmp473 = (1.0/2.0)*tmp112;
               const double tmp474 = tmp132*tmp2;
               const double tmp475 = tmp273*tmp3;
               const double tmp476 = hDD_dD120*tmp15*tmp3;
               const double tmp477 = tmp141*tmp2;
               const double tmp478 = -tmp477;
               const double tmp479 = tmp146*tmp2;
               const double tmp480 = -tmp479;
               const double tmp481 = hDD_dD010*tmp34 + tmp480;
               const double tmp482 = (1.0/2.0)*lambdaU0;
               const double tmp483 = (1.0/2.0)*tmp302;
               const double tmp484 = (1.0/2.0)*tmp79;
               const double tmp485 = lambdaU2*tmp12;
               const double tmp486 = (1.0/2.0)*tmp50;
               const double tmp487 = (1.0/4.0)*lambdaU2;
               const double tmp488 = -lambdaU1*tmp486 - tmp110*tmp14*tmp33*tmp487 - tmp115*(-1.0/2.0*tmp124 + tmp475 + tmp476 + tmp478) - tmp115*(-tmp132*tmp197 + tmp316*xx0 + tmp476 - 3*tmp477 + tmp50 + tmp8*tmp90) - tmp125*(tmp111*tmp94 - 1.0/2.0*tmp308 + tmp481) - tmp125*(hDD01*tmp254 + tmp111*tmp134 + tmp118*tmp254 - tmp197*tmp228 - 3*tmp479) - tmp143*(tmp127*tmp254 + tmp144 - tmp146*tmp197 - tmp197*tmp310) - tmp149*(hDD_dD120*tmp107*tmp49 + tmp111*tmp141 - tmp13*tmp136*tmp139 + tmp153*tmp254 + tmp319) + tmp151*tmp482 + tmp289*(tmp249 + tmp261) + tmp293*(tmp204 + tmp215) + tmp297*(tmp221 + tmp236) + tmp37*tmp473 + tmp45*tmp483 - tmp484*tmp485 - tmp96*(hDD_dDD1200*tmp169 + tmp130*tmp8 + 4*tmp44 - 2*tmp474);
               const double tmp489 = -tmp201 - tmp202;
               const double tmp490 = alpha_dD0*tmp489;
               const double tmp491 = tmp102*tmp489 - tmp490;
               const double tmp492 = 2*tmp413;
               const double tmp493 = tmp411 + tmp436;
               const double tmp494 = tmp397 + tmp438;
               const double tmp495 = 2*tmp264;
               const double tmp496 = 2*tmp463;
               const double tmp497 = tmp161*tmp236;
               const double tmp498 = tmp165*tmp366;
               const double tmp499 = tmp210 + tmp447;
               const double tmp500 = tmp245 + tmp453;
               const double tmp501 = tmp183*tmp261 + tmp449;
               const double tmp502 = tmp190*tmp359 + tmp467;
               const double tmp503 = alpha*(-tmp128*(tmp160 + tmp471) - tmp143*(tmp327 + tmp472) + tmp47*(tmp262 + tmp458) + tmp47*(2*tmp266 + tmp459) + tmp47*(tmp267 + 2*tmp460) + tmp47*(tmp165*tmp359 + tmp457) + tmp47*(tmp208 + tmp341 + tmp442) + tmp47*(tmp161*tmp261 + tmp208 + tmp444) + tmp488 + tmp52*(2*tmp335 + tmp466) + tmp52*(tmp343 + tmp501) + tmp52*(tmp367 + tmp462) + tmp52*(tmp464 + tmp496) + tmp52*(tmp468 + tmp502) + tmp52*(tmp344 + tmp345 + tmp441) + tmp54*(2*tmp339 + tmp432) + tmp54*(tmp362 + tmp431) + tmp54*(tmp347 + tmp356 + tmp357) + tmp70*(tmp406 + tmp493) + tmp70*(tmp437 + tmp492) + tmp70*(tmp439 + tmp494) + tmp81*(tmp244 + 2*tmp456) + tmp81*(tmp445 + tmp499) + tmp81*(tmp450 + tmp498) + tmp81*(tmp452 + tmp495) + tmp81*(tmp454 + tmp500) + tmp81*(tmp194 + tmp443 + tmp497) + tmp83*(tmp238 + 2*tmp250) + tmp83*(tmp242 + tmp434) + tmp83*(tmp177 + tmp205 + tmp433)) + tmp491;
               const double tmp504 = tmp176*tmp241;
               const double tmp505 = tmp199*tmp359;
               const double tmp506 = tmp464 + tmp505;
               const double tmp507 = tmp161*tmp211;
               const double tmp508 = tmp162*tmp241 + tmp220;
               const double tmp509 = tmp236*tmp275 + tmp426;
               const double tmp510 = tmp280*tmp281;
               const double tmp511 = tmp176*tmp269;
               const double tmp512 = tmp176*tmp211;
               const double tmp513 = tmp161*tmp241;
               const double tmp514 = tmp161*tmp269;
               const double tmp515 = tmp204*tmp276;
               const double tmp516 = tmp166*tmp276;
               const double tmp517 = tmp204*tmp275 + tmp407;
               const double tmp518 = tmp162*tmp366 + tmp240;
               const double tmp519 = tmp165*tmp401;
               const double tmp520 = tmp192*tmp280;
               const double tmp521 = tmp162*tmp359 + tmp265;
               const double tmp522 = tmp199*tmp241;
               const double tmp523 = tmp452 + tmp522;
               const double tmp524 = tmp203*tmp401;
               const double tmp525 = tmp249*tmp275;
               const double tmp526 = tmp261*tmp275 + tmp414;
               const double tmp527 = tmp241*tmp280;
               const double tmp528 = tmp236*tmp280;
               const double tmp529 = tmp199*tmp366;
               const double tmp530 = tmp437 + tmp529;
               const double tmp531 = tmp90*xx0;
               const double tmp532 = -tmp174*tmp197 - tmp531;
               const double tmp533 = -tmp159*tmp50 + tmp532;
               const double tmp534 = -tmp153*tmp197;
               const double tmp535 = tmp121 - tmp373 + tmp534;
               const double tmp536 = (1.0/2.0)*tmp30;
               const double tmp537 = (1.0/2.0)*lambdaU_dD20;
               const double tmp538 = (1.0/2.0)*lambdaU_dD10;
               const double tmp539 = tmp111*tmp127 - tmp197*tmp322;
               const double tmp540 = -tmp197*tmp318 + tmp478;
               const double tmp541 = -hDD_dD020*tmp152 - tmp130*xx0;
               const double tmp542 = -tmp197*tmp316 + tmp44 - tmp474;
               const double tmp543 = hDD01*tmp482 - lambdaU1*tmp536 + lambdaU_dD00*tmp484 - tmp115*(-hDD_dD110*xx0 + tmp384 - tmp385) - tmp115*(hDD00 + hDD11 - tmp135 + tmp386) + tmp120*tmp537 - tmp125*(-tmp390 + tmp541) - tmp125*(tmp391 + tmp542) - tmp128*(hDD_dD010*tmp3 + tmp116) - tmp143*(tmp534 + tmp540) - tmp149*(tmp481 + tmp539) + tmp2*tmp33*tmp538 + tmp289*(tmp236 + tmp241) + tmp293*(tmp192 + tmp211) + tmp297*(tmp269 + tmp281) + tmp473*tmp50 - tmp96*(hDD_dD010 + hDD_dDD0100*xx0 + tmp382 - tmp383);
               const double tmp544 = -tmp188 - tmp189;
               const double tmp545 = alpha_dD0*tmp544;
               const double tmp546 = tmp102*tmp544 - tmp545;
               const double tmp547 = alpha*(-tmp143*(tmp533 + tmp535) + tmp47*(2*tmp210 + tmp513) + tmp47*(tmp264 + tmp521) + tmp47*(tmp284 + tmp455) + tmp47*(tmp446 + tmp512) + tmp47*(tmp451 + tmp523) + tmp47*(tmp245 + tmp246 + tmp498) + tmp52*(tmp408 + tmp530) + tmp52*(tmp410 + 2*tmp515) + tmp52*(tmp435 + tmp511) + tmp52*(tmp440 + tmp524) + tmp52*(tmp525 + tmp526) + tmp52*(tmp397 + tmp527 + tmp528) + tmp54*(tmp334 + tmp506) + tmp54*(tmp367 + tmp469) + tmp54*(tmp448 + tmp504) + tmp543 + tmp70*(2*tmp417 + tmp422) + tmp70*(tmp418 + tmp509) + tmp70*(tmp398 + tmp402 + tmp510) + tmp81*(2*tmp206 + tmp514) + tmp81*(tmp239 + tmp518) + tmp81*(tmp404 + 2*tmp516) + tmp81*(tmp215*tmp275 + tmp517) + tmp81*(tmp282 + tmp283 + tmp519) + tmp81*(tmp211*tmp280 + tmp282 + tmp520) + tmp83*(2*tmp184 + tmp507) + tmp83*(tmp219 + tmp508) + tmp83*(tmp213 + tmp214 + tmp270)) + tmp546;
               const double tmp548 = 2*tmp367;
               const double tmp549 = tmp345 + tmp504;
               const double tmp550 = 2*tmp284;
               const double tmp551 = 2*tmp524;
               const double tmp552 = tmp194 + tmp512;
               const double tmp553 = tmp176*tmp281 + tmp511;
               const double tmp554 = tmp199*tmp368;
               const double tmp555 = tmp157*tmp50 + tmp532;
               const double tmp556 = tmp253*tmp359;
               const double tmp557 = tmp241*tmp260 + tmp363;
               const double tmp558 = tmp221*tmp276 + tmp424;
               const double tmp559 = tmp280*tmp368;
               const double tmp560 = tmp241*tmp253;
               const double tmp561 = tmp253*tmp366;
               const double tmp562 = tmp275*tmp338;
               const double tmp563 = tmp215*tmp276 + tmp405;
               const double tmp564 = tmp221*tmp280;
               const double tmp565 = tmp211*tmp260 + tmp342;
               const double tmp566 = tmp249*tmp276 + tmp412;
               const double tmp567 = tmp260*tmp269 + tmp351;
               const double tmp568 = tmp258*tmp401;
               const double tmp569 = tmp280*tmp332;
               const double tmp570 = tmp475 - tmp50 + tmp540;
               const double tmp571 = tmp15*xx0;
               const double tmp572 = hDD_dD020*tmp571;
               const double tmp573 = tmp12*tmp8;
               const double tmp574 = lambdaU_dD00*tmp486 - tmp115*(-tmp388 + tmp541 + tmp572) - tmp115*(tmp173 + tmp389 + tmp542 + tmp572) - tmp125*(-hDD_dD220*tmp254 + tmp111*tmp117 - tmp393 + tmp394) - tmp125*(hDD00*tmp26 + tmp111*tmp118 + tmp225 - tmp314 + tmp395) - tmp13*tmp392*tmp487 + tmp14*tmp37*tmp537 - tmp143*(-hDD01*tmp224 + tmp312 + tmp539) - tmp143*(hDD00*tmp15*tmp573 + tmp154*tmp79 - tmp168*tmp573 - tmp313*tmp322 + tmp480) - tmp149*(tmp111*tmp153 + tmp111*tmp318 + tmp304 + tmp307 - tmp315) + tmp151*tmp538 + tmp289*(tmp332 + tmp359) + tmp293*(tmp221 + tmp241) + tmp297*(tmp366 + tmp368) + tmp483*tmp50 - tmp485*tmp536 - tmp96*(hDD_dDD0200*tmp317 + tmp273 + tmp380 - tmp381);
               const double tmp575 = -tmp232 - tmp233;
               const double tmp576 = alpha_dD0*tmp575;
               const double tmp577 = tmp102*tmp575 - tmp576;
               const double tmp578 = alpha*(-tmp128*(tmp533 + tmp570) + tmp47*(2*tmp334 + tmp560) + tmp47*(tmp343 + tmp565) + tmp47*(tmp367 + tmp502) + tmp47*(tmp496 + tmp505) + tmp47*(tmp501 + tmp504) + tmp47*(tmp348 + tmp349 + tmp461) + tmp52*(2*tmp336 + tmp561) + tmp52*(tmp352 + tmp567) + tmp52*(tmp415 + 2*tmp562) + tmp52*(tmp261*tmp276 + tmp566) + tmp52*(tmp370 + tmp371 + tmp568) + tmp52*(tmp280*tmp359 + tmp370 + tmp569) + tmp54*(2*tmp340 + tmp556) + tmp54*(tmp364 + tmp557) + tmp54*(tmp358 + tmp360 + tmp372) + tmp574 + tmp70*(tmp420 + tmp558) + tmp70*(2*tmp421 + tmp428) + tmp70*(tmp399 + tmp403 + tmp559) + tmp81*(tmp409 + 2*tmp525) + tmp81*(tmp492 + tmp529) + tmp81*(tmp493 + tmp511) + tmp81*(tmp494 + tmp524) + tmp81*(tmp515 + tmp563) + tmp81*(tmp396 + tmp527 + tmp564) + tmp83*(tmp284 + tmp500) + tmp83*(tmp495 + tmp522) + tmp83*(tmp499 + tmp512)) + tmp577;
               const double tmp579 = tmp298*tmp83 + tmp374*tmp54 + tmp430*tmp70 + tmp47*tmp503 + tmp47*(alpha*(-tmp128*(tmp158 + tmp471) - tmp143*(tmp328 + tmp472) + tmp47*(2*tmp208 + tmp444) + tmp47*(tmp262 + tmp457) + tmp47*(tmp341 + 2*tmp442) + tmp47*(tmp211*tmp258 + tmp458) + tmp47*(tmp266 + tmp267 + tmp460) + tmp47*(tmp215*tmp253 + tmp266 + tmp459) + tmp488 + tmp52*(tmp344 + 2*tmp441) + tmp52*(tmp448 + tmp449) + tmp52*(tmp461 + tmp462) + tmp52*(tmp467 + tmp469) + tmp52*(tmp334 + tmp463 + tmp464) + tmp52*(tmp335 + tmp465 + tmp466) + tmp54*(2*tmp347 + tmp356) + tmp54*(tmp354 + tmp431) + tmp54*(tmp329 + tmp339 + tmp432) + tmp70*(tmp435 + tmp436) + tmp70*(tmp438 + tmp440) + tmp70*(tmp408 + tmp413 + tmp437) + tmp81*(2*tmp194 + tmp443) + tmp81*(tmp284 + tmp450) + tmp81*(tmp446 + tmp447) + tmp81*(tmp453 + tmp455) + tmp81*(tmp243 + tmp244 + tmp456) + tmp81*(tmp264 + tmp451 + tmp452) + tmp83*(2*tmp177 + tmp433) + tmp83*(tmp217 + tmp434) + tmp83*(tmp237 + tmp238 + tmp250)) + tmp491) + tmp52*tmp578 + tmp52*(alpha*(-tmp128*(tmp555 + tmp570) + tmp47*(tmp348 + 2*tmp461) + tmp47*(tmp441 + tmp565) + tmp47*(tmp449 + tmp549) + tmp47*(tmp467 + tmp548) + tmp47*(tmp334 + tmp465 + tmp560) + tmp47*(tmp335 + tmp463 + tmp505) + tmp52*(tmp352 + tmp566) + tmp52*(2*tmp370 + tmp569) + tmp52*(tmp371 + 2*tmp568) + tmp52*(tmp260*tmp281 + tmp567) + tmp52*(tmp336 + tmp415 + tmp562) + tmp52*(tmp253*tmp368 + tmp336 + tmp561) + tmp54*(tmp355 + tmp557) + tmp54*(tmp358 + 2*tmp372) + tmp54*(tmp333 + tmp340 + tmp556) + tmp574 + tmp70*(2*tmp403 + tmp559) + tmp70*(tmp425 + tmp558) + tmp70*(tmp421 + tmp428 + tmp429) + tmp81*(2*tmp396 + tmp564) + tmp81*(tmp406 + tmp563) + tmp81*(tmp436 + tmp553) + tmp81*(tmp438 + tmp551) + tmp81*(tmp408 + tmp409 + tmp525) + tmp81*(tmp413 + tmp529 + tmp554) + tmp83*(tmp447 + tmp552) + tmp83*(tmp453 + tmp550) + tmp83*(tmp243 + tmp264 + tmp522)) + tmp577) + tmp547*tmp81 + tmp81*(alpha*(-tmp143*(tmp535 + tmp555) + tmp47*(tmp243 + tmp523) + tmp47*(tmp246 + 2*tmp498) + tmp47*(tmp445 + tmp552) + tmp47*(tmp454 + tmp550) + tmp47*(tmp456 + tmp521) + tmp47*(tmp210 + tmp497 + tmp513) + tmp52*(2*tmp397 + tmp528) + tmp52*(tmp406 + tmp553) + tmp52*(tmp413 + tmp526) + tmp52*(tmp439 + tmp551) + tmp52*(tmp530 + tmp554) + tmp52*(tmp410 + tmp411 + tmp515) + tmp54*(tmp335 + tmp506) + tmp54*(tmp343 + tmp549) + tmp54*(tmp468 + tmp548) + tmp543 + tmp70*(2*tmp402 + tmp510) + tmp70*(tmp427 + tmp509) + tmp70*(tmp417 + tmp422 + tmp423) + tmp81*(tmp239 + tmp517) + tmp81*(2*tmp282 + tmp520) + tmp81*(tmp283 + 2*tmp519) + tmp81*(tmp162*tmp368 + tmp518) + tmp81*(tmp206 + tmp404 + tmp516) + tmp81*(tmp161*tmp281 + tmp206 + tmp514) + tmp83*(tmp214 + 2*tmp270) + tmp83*(tmp222 + tmp508) + tmp83*(tmp184 + tmp193 + tmp507)) + tmp546);
               const double tmp580 = vetU_dD00*xx0;
               const double tmp581 = tmp15*vetU2;
               const double tmp582 = tmp13*tmp581;
               const double tmp583 = aDD11*tmp3;
               const double tmp584 = aDD12*tmp169;
               const double tmp585 = tmp59*tmp79;
               const double tmp586 = tmp47*tmp583 + tmp48*tmp52 + tmp54*tmp584;
               const double tmp587 = tmp47*tmp584;
               const double tmp588 = tmp583*tmp83;
               const double tmp589 = tmp587 + tmp588 + tmp86;
               const double tmp590 = tmp48*tmp70 + tmp52*tmp584 + tmp583*tmp81;
               const double tmp591 = (1.0/3.0)*tmp579;
               const double tmp592 = aDD22*tmp34;
               const double tmp593 = tmp50*tmp59;
               const double tmp594 = tmp54*tmp592;
               const double tmp595 = tmp587 + tmp594 + tmp85;
               const double tmp596 = tmp47*tmp592 + tmp55*tmp81 + tmp584*tmp83;
               const double tmp597 = tmp52*tmp592 + tmp55*tmp70 + tmp584*tmp81;
               const double tmp598 = tmp582*tmp8;
               const double tmp599 = (2.0/3.0)*tmp3;
               const double tmp600 = tmp18*tmp599;
               const double tmp601 = tmp584*tmp88;
               const double tmp602 = tmp33*tmp59;
               const double tmp603 = tmp583*tmp88;
               const double tmp604 = (1.0/3.0)*tmp3;
               const double tmp605 = tmp44*tmp604;
               const double tmp606 = aDD22*tmp325;
               const double tmp607 = alpha*tmp606;
               const double tmp608 = tmp37*tmp59;
               const double tmp609 = tmp105*tmp4;
               const double tmp610 = lambdaU0*vetU_dD00;
               const double tmp611 = tmp47*tmp581;
               const double tmp612 = tmp47*(tmp119*vetU2 - tmp581);
               const double tmp613 = tmp70*vetU_dDD000;
               const double tmp614 = tmp83*(tmp580 - vetU0);
               const double tmp615 = alpha*trK_dD0;
               const double tmp616 = tmp615*tmp70;
               const double tmp617 = tmp54*(-tmp110*vetU1 + tmp254*vetU_dD00 - tmp26*vetU0);
               const double tmp618 = (3.0/2.0)*tmp81;
               const double tmp619 = tmp7*xx0;
               const double tmp620 = tmp22*tmp254;
               const double tmp621 = tmp2*vetU1;
               const double tmp622 = tmp105*tmp621;
               const double tmp623 = -tmp326*tmp622 + tmp470*vetU1*(tmp27*tmp326 - 2*tmp28)/pow(xx0, 5);
               const double tmp624 = (1.0/4.0)*tmp623;
               const double tmp625 = tmp4*vetU0;
               const double tmp626 = tmp470/tmp27;
               const double tmp627 = -4*tmp323*tmp5 - 8*tmp625 + tmp626*(12*tmp34*vetU0 + 4*tmp78*vetU_dD00) + tmp626*(2*tmp12*tmp15*tmp27*tmp7 + 8*tmp16*tmp169) + vetU_dDD000;
               const double tmp628 = (1.0/4.0)*tmp627;
               const double tmp629 = betU1*tmp5;
               const double tmp630 = (3.0/4.0)*tmp5;
               const double tmp631 = lambdaU1*tmp630;
               const double tmp632 = betU0*tmp621;
               const double tmp633 = betU1*tmp2;
               const double tmp634 = tmp633*vetU0;
               const double tmp635 = (3.0/4.0)*tmp190;
               const double tmp636 = tmp103*vetU1;
               const double tmp637 = tmp2*vetU0;
               const double tmp638 = lambdaU1*tmp637;
               const double tmp639 = tmp14*vetU2;
               const double tmp640 = betU0*tmp639;
               const double tmp641 = betU2*tmp14;
               const double tmp642 = tmp641*vetU0;
               const double tmp643 = tmp13*vetU2;
               const double tmp644 = (3.0/4.0)*tmp643;
               const double tmp645 = tmp103*tmp644;
               const double tmp646 = (3.0/4.0)*vetU0;
               const double tmp647 = lambdaU2*tmp14*tmp646;
               const double tmp648 = betU1*tmp4;
               const double tmp649 = tmp643*tmp648;
               const double tmp650 = betU2*tmp5;
               const double tmp651 = tmp13*tmp203;
               const double tmp652 = lambdaU1*tmp4;
               const double tmp653 = tmp644*tmp652;
               const double tmp654 = lambdaU2*tmp630;
               const double tmp655 = tmp609*vetU2;
               const double tmp656 = betU2*tmp655;
               const double tmp657 = (3.0/4.0)*lambdaU2*tmp655;
               const double tmp658 = betU0*vetU0;
               const double tmp659 = lambdaU0*tmp646;
               const double tmp660 = alpha_dD0 + 3*tmp102;
               const double tmp661 = pow(tmp40, -2);
               const double tmp662 = pow(tmp51, 2);
               const double tmp663 = tmp661*tmp662;
               const double tmp664 = pow(tmp80, 2);
               const double tmp665 = tmp661*tmp664;
               const double tmp666 = tmp583*tmp665;
               const double tmp667 = aDD00*tmp661;
               const double tmp668 = tmp667*pow(tmp69, 2);
               const double tmp669 = tmp584*tmp661;
               const double tmp670 = tmp669*tmp80;
               const double tmp671 = tmp51*tmp670;
               const double tmp672 = tmp51*tmp69;
               const double tmp673 = tmp55*tmp661;
               const double tmp674 = tmp48*tmp661;
               const double tmp675 = tmp674*tmp80;
               const double tmp676 = tmp660*(-tmp606*tmp663 - 2*tmp666 - 2*tmp668 - 4*tmp671 - 4*tmp672*tmp673 - 4*tmp675*tmp69);
               const double tmp677 = pow(tmp46, 2);
               const double tmp678 = tmp583*tmp661;
               const double tmp679 = tmp592*tmp661;
               const double tmp680 = tmp46*tmp51;
               const double tmp681 = tmp661*tmp9;
               const double tmp682 = 2*tmp46;
               const double tmp683 = tmp51*tmp53;
               const double tmp684 = tmp24*tmp661;
               const double tmp685 = pow(tmp53, 2)*tmp679 + tmp53*tmp669*tmp682 + tmp662*tmp667 + tmp677*tmp678 + tmp680*tmp681 + tmp683*tmp684;
               const double tmp686 = (3.0/2.0)*alpha;
               const double tmp687 = tmp685*tmp686;
               const double tmp688 = tmp661*tmp677;
               const double tmp689 = tmp46*tmp80;
               const double tmp690 = tmp669*tmp82;
               const double tmp691 = tmp681*tmp80;
               const double tmp692 = tmp592*tmp688 + tmp664*tmp667 + tmp678*pow(tmp82, 2) + tmp682*tmp690 + tmp684*tmp689 + tmp691*tmp82;
               const double tmp693 = tmp686*tmp692;
               const double tmp694 = tmp592*tmp663 + tmp666 + tmp668 + 2*tmp671 + tmp672*tmp684 + tmp69*tmp691;
               const double tmp695 = alpha*tmp694;
               const double tmp696 = (3.0/2.0)*tmp695;
               const double tmp697 = tmp46*tmp673;
               const double tmp698 = tmp46*tmp679;
               const double tmp699 = tmp46*tmp674;
               const double tmp700 = tmp667*tmp80;
               const double tmp701 = tmp678*tmp82;
               const double tmp702 = tmp673*tmp80;
               const double tmp703 = tmp674*tmp82;
               const double tmp704 = tmp46*tmp701 + tmp51*tmp697 + tmp51*tmp700 + tmp51*tmp703 + tmp53*tmp690 + tmp53*tmp698 + tmp53*tmp702 + tmp584*tmp688 + tmp699*tmp80;
               const double tmp705 = 3*alpha;
               const double tmp706 = tmp704*tmp705;
               const double tmp707 = tmp669*tmp680;
               const double tmp708 = tmp678*tmp689;
               const double tmp709 = tmp53*tmp670;
               const double tmp710 = tmp667*tmp672;
               const double tmp711 = tmp53*tmp69;
               const double tmp712 = tmp51*tmp675 + tmp55*tmp663 + tmp673*tmp711 + tmp679*tmp683 + tmp69*tmp699 + tmp707 + tmp708 + tmp709 + tmp710;
               const double tmp713 = tmp705*tmp712;
               const double tmp714 = tmp669*tmp689;
               const double tmp715 = tmp51*tmp690;
               const double tmp716 = tmp701*tmp80;
               const double tmp717 = tmp69*tmp700;
               const double tmp718 = tmp48*tmp665 + tmp51*tmp698 + tmp51*tmp702 + tmp69*tmp697 + tmp69*tmp703 + tmp714 + tmp715 + tmp716 + tmp717;
               const double tmp719 = tmp705*tmp718;
               const double tmp720 = (2.0/3.0)*tmp83;
               const double tmp721 = (2.0/3.0)*tmp54;
               const double tmp722 = (2.0/3.0)*tmp70;
               const double tmp723 = tmp18*(tmp165*tmp720 + tmp258*tmp721 + tmp280*tmp722 + (4.0/3.0)*tmp294 + (4.0/3.0)*tmp295 + (4.0/3.0)*tmp296);
               const double tmp724 = lambdaU0*tmp7;
               const double tmp725 = tmp615*tmp81;
               const double tmp726 = tmp2*vetU_dD00 - tmp625;
               const double tmp727 = tmp619*tmp83;
               const double tmp728 = tmp22*tmp52;
               const double tmp729 = tmp110*tmp728;
               const double tmp730 = (1.0/4.0)*tmp136;
               const double tmp731 = tmp54*(tmp254*tmp7 + tmp26*tmp621 - tmp622*tmp730);
               const double tmp732 = tmp2*vetU2;
               const double tmp733 = tmp301*tmp581;
               const double tmp734 = tmp47*(-tmp12*tmp732 + (1.0/4.0)*tmp137*tmp732 - tmp154*tmp639 + tmp733);
               const double tmp735 = 2/tmp49;
               const double tmp736 = tmp70*(tmp10*tmp7 + tmp2*vetU_dDD100 - 2*tmp4*vetU_dD10 + tmp735*vetU1);
               const double tmp737 = (3.0/4.0)*tmp182;
               const double tmp738 = tmp13*tmp650;
               const double tmp739 = tmp13*tmp654;
               const double tmp740 = tmp606*tmp661;
               const double tmp741 = tmp681*tmp69;
               const double tmp742 = tmp660*(-tmp46*tmp684*tmp69 - tmp51*tmp684*tmp80 - tmp665*tmp9 - tmp680*tmp740 - 2*tmp714 - 2*tmp715 - 2*tmp716 - 2*tmp717 - tmp741*tmp82);
               const double tmp743 = tmp18*(tmp161*tmp720 + tmp260*tmp721 + tmp276*tmp722 + (4.0/3.0)*tmp290 + (4.0/3.0)*tmp291 + (4.0/3.0)*tmp292);
               const double tmp744 = tmp105*tmp581;
               const double tmp745 = tmp652*tmp744;
               const double tmp746 = lambdaU0*tmp22;
               const double tmp747 = tmp52*tmp615;
               const double tmp748 = 1.0/tmp320;
               const double tmp749 = tmp47*(-tmp621*tmp730*tmp748 - tmp621);
               const double tmp750 = tmp159*tmp47*tmp621;
               const double tmp751 = tmp52*(tmp197*tmp7 + tmp726);
               const double tmp752 = tmp54*(tmp620 - tmp733);
               const double tmp753 = -tmp106*tmp2*vetU_dD20 + tmp197*tmp22 + tmp581*tmp609;
               const double tmp754 = tmp70*(tmp10*tmp22 + tmp14*vetU_dDD200 - 2*tmp20*vetU_dD20 + tmp643*tmp735);
               const double tmp755 = tmp2*tmp581;
               const double tmp756 = tmp83*(-tmp110*tmp748*tmp755 + tmp159*tmp639 + tmp22*xx0 + tmp639 + vetU2*(tmp108*tmp2*tmp326 + tmp14) + tmp730*tmp732/pow(tmp12, 5));
               const double tmp757 = (3.0/4.0)*tmp186;
               const double tmp758 = tmp660*(-tmp24*tmp663 - tmp46*tmp741 - tmp51*tmp691 - tmp683*tmp740 - tmp684*tmp711 - 2*tmp707 - 2*tmp708 - 2*tmp709 - 2*tmp710);
               const double tmp759 = tmp18*(tmp162*tmp720 + tmp253*tmp721 + tmp275*tmp722 + (4.0/3.0)*tmp286 + (4.0/3.0)*tmp287 + (4.0/3.0)*tmp288);
               const double tmp760 = alpha*(tmp24*tmp52 + 2*tmp587 + tmp588 + tmp594 + tmp81*tmp9 + tmp87) - tmp11 - tmp17 - vetU_dD00;
               const double tmp761 = (2.0/3.0)*tmp760;
               const double tmp762 = alpha*vv;
               const double tmp763 = 16*tmp76*tmp762*uu_dD0;
               const double tmp764 = (1.0/3.0)*tmp623;
               const double tmp765 = (1.0/3.0)*tmp627;
               const double tmp766 = alpha*tmp685;
               const double tmp767 = alpha*tmp692;
               const double tmp768 = 4*alpha;
               const double tmp769 = tmp704*tmp768;
               const double tmp770 = tmp712*tmp768;
               const double tmp771 = tmp718*tmp768;
               const double tmp772 = 2*tmp81;
               const double tmp773 = tmp58*tmp83;
               const double tmp774 = 2*tmp58;
               const double tmp775 = tmp54*tmp58;
               const double tmp776 = tmp4*pow(vetU1, 2);
               const double tmp777 = 2*vetU0;
               const double tmp778 = tmp621*tmp777;
               const double tmp779 = tmp639*tmp777;
               const double tmp780 = 2*tmp5*tmp643;
               const double tmp781 = tmp609*pow(vetU2, 2);
               const double tmp782 = pow(vetU0, 2);
               const double tmp783 = alpha*uu_dD0;
               const double tmp784 = tmp71*uu_dD0;
               const double tmp785 = tmp58*tmp88*uu_dD0;
               rhs_gfs[IDX4(ADD00GF, i0, i1, i2)] = aDD00*tmp0 + aDD00*tmp1 - aDD00*tmp19 + aDD_dupD000*vetU0 + tmp22*tmp24 - tmp56*(aDD00*tmp52 + tmp47*tmp48 + tmp54*tmp55) + tmp58*(tmp430 - tmp579*((1.0/3.0)*hDD00 + 1.0/3.0)) + tmp7*tmp9 - tmp77*(-tmp30*tmp66 + tmp57 + tmp67*tmp73 - tmp67*tmp75) - tmp84*(aDD00*tmp81 + tmp47*tmp55 + tmp48*tmp83) - tmp89*(tmp85 + tmp86 + tmp87);
               rhs_gfs[IDX4(ADD01GF, i0, i1, i2)] = tmp2*(aDD01*tmp580 - aDD02*tmp582 + tmp1*tmp48 - tmp19*tmp48 + tmp22*tmp584 - tmp56*tmp586 + tmp58*(tmp547 - tmp591*tmp79) + tmp583*tmp7 - tmp589*tmp84 - tmp590*tmp89 - tmp77*(tmp585*tmp73 - tmp585*tmp75 - tmp66*tmp79) + vetU0*(aDD01 + aDD_dupD010*xx0));
               rhs_gfs[IDX4(ADD02GF, i0, i1, i2)] = tmp14*(aDD02*tmp16 + tmp1*tmp55 - tmp19*tmp55 + tmp22*tmp592 + tmp23*tmp580 - tmp56*tmp595 + tmp58*(-tmp50*tmp591 + tmp578) + tmp584*tmp7 - tmp596*tmp84 - tmp597*tmp89 - tmp77*(-tmp50*tmp66 + tmp593*tmp73 - tmp593*tmp75) + vetU0*(aDD_dupD020*tmp317 + tmp23));
               rhs_gfs[IDX4(ADD11GF, i0, i1, i2)] = tmp4*(-aDD11*tmp600 - aDD12*tmp598 + tmp1*tmp583 + tmp58*(tmp298 - tmp579*((1.0/3.0)*tmp32 + tmp604)) - tmp586*tmp601 - tmp589*tmp603 - tmp590*tmp84 - tmp77*(-tmp33*tmp66 + tmp602*tmp73 - tmp602*tmp75) + vetU0*(aDD11*tmp8 + aDD_dupD110*tmp3));
               rhs_gfs[IDX4(ADD12GF, i0, i1, i2)] = tmp20*(-aDD12*tmp12*tmp600 + aDD12*tmp571*vetU1 - aDD22*tmp581*xx0 + tmp1*tmp584 + tmp58*(tmp503 - tmp579*tmp605) - tmp595*tmp601 - tmp596*tmp603 - tmp597*tmp84 - tmp77*(tmp45*tmp59*tmp73 - tmp45*tmp66 - tmp59*tmp605*tmp74) + vetU0*(aDD12*tmp573 + aDD_dupD120*tmp169));
               rhs_gfs[IDX4(ADD22GF, i0, i1, i2)] = tmp609*(aDD22*tmp16*tmp573 + tmp1*tmp592 - tmp19*tmp592 - tmp56*tmp597 + tmp58*(tmp374 - tmp579*((1.0/3.0)*tmp34 + (1.0/3.0)*tmp36)) - tmp595*tmp607 - tmp596*tmp601 - tmp77*(-tmp37*tmp66 + tmp608*tmp73 - tmp608*tmp75) + vetU0*(aDD22*tmp224 + aDD_dupD220*tmp34));
               rhs_gfs[IDX4(ALPHAGF, i0, i1, i2)] = alpha_dupD0*vetU0 - tmp88*trK;
               rhs_gfs[IDX4(BETU0GF, i0, i1, i2)] = -betU0*eta + betU_dupD00*vetU0 + tmp164*tmp629 - tmp164*tmp631 + tmp165*tmp693 + tmp190*tmp632 + tmp190*tmp634 + tmp190*tmp719 + tmp203*tmp649 - tmp203*tmp653 + tmp203*tmp706 + tmp234*tmp640 + tmp234*tmp642 - tmp234*tmp645 - tmp234*tmp647 + tmp234*tmp713 + tmp257*tmp656 - tmp257*tmp657 + tmp258*tmp687 + tmp280*tmp658 - tmp280*tmp659 + tmp280*tmp696 - 3.0/2.0*tmp52*tmp620 - 3.0/4.0*tmp610 + (3.0/4.0)*tmp611 + (3.0/4.0)*tmp612 + (3.0/4.0)*tmp613 + (3.0/4.0)*tmp614 - tmp616 + (3.0/4.0)*tmp617 - tmp618*tmp619 + tmp624*tmp81 + tmp628*tmp70 - tmp635*tmp636 - tmp635*tmp638 + tmp650*tmp651 - tmp651*tmp654 + (3.0/4.0)*tmp676 + (3.0/4.0)*tmp723;
               rhs_gfs[IDX4(BETU1GF, i0, i1, i2)] = xx0*(-eta*tmp633 + tmp161*tmp629 - tmp161*tmp631 + tmp161*tmp693 + tmp176*tmp649 - tmp176*tmp653 + tmp176*tmp706 + tmp176*tmp738 - tmp176*tmp739 + tmp182*tmp632 + tmp182*tmp634 + tmp183*tmp719 + (3.0/8.0)*tmp2*tmp313*tmp611 + tmp235*tmp640 + tmp235*tmp642 - tmp235*tmp645 - tmp235*tmp647 + tmp235*tmp713 + tmp259*tmp656 - tmp259*tmp657 + tmp260*tmp687 + tmp276*tmp658 - tmp276*tmp659 + tmp276*tmp696 + tmp618*tmp726 + tmp624*tmp83 + tmp628*tmp81 - tmp636*tmp737 - tmp638*tmp737 - 3.0/4.0*tmp724 - tmp725 + (3.0/4.0)*tmp727 - 3.0/4.0*tmp729 + (3.0/4.0)*tmp731 + (3.0/4.0)*tmp734 + (3.0/4.0)*tmp736 + (3.0/4.0)*tmp742 + (3.0/4.0)*tmp743 + vetU0*(betU_dupD10*tmp2 - tmp648));
               rhs_gfs[IDX4(BETU2GF, i0, i1, i2)] = tmp317*(-eta*tmp641 - tmp106*tmp650 + tmp162*tmp629 - tmp162*tmp631 + tmp162*tmp693 + tmp186*tmp632 + tmp186*tmp634 + tmp186*tmp719 + tmp198*tmp649 - tmp198*tmp653 + tmp198*tmp738 - tmp198*tmp739 + tmp199*tmp706 + tmp230*tmp640 + tmp230*tmp642 - tmp230*tmp645 - tmp230*tmp647 + tmp231*tmp713 + tmp253*tmp656 - tmp253*tmp657 + tmp253*tmp687 + tmp275*tmp658 - tmp275*tmp659 + tmp275*tmp696 + tmp47*tmp624 + tmp52*tmp628 + tmp618*tmp753 - tmp636*tmp757 - tmp638*tmp757 + (3.0/4.0)*tmp745 - 3.0/4.0*tmp746 - tmp747 + (3.0/4.0)*tmp749 + (3.0/4.0)*tmp750 + (3.0/2.0)*tmp751 + (3.0/4.0)*tmp752 + (3.0/4.0)*tmp754 + (3.0/4.0)*tmp756 + (3.0/4.0)*tmp758 + (3.0/4.0)*tmp759 + vetU0*(-betU2*tmp20 + betU_dupD20*tmp14));
               rhs_gfs[IDX4(CFGF, i0, i1, i2)] = -2*cf*(-cf_dupD0*tmp379*vetU0 - 1.0/6.0*tmp1 + (1.0/6.0)*tmp17 + (1.0/3.0)*tmp637 + (1.0/6.0)*vetU_dD00);
               rhs_gfs[IDX4(HDD00GF, i0, i1, i2)] = hDD_dupD000*vetU0 + tmp0*tmp30 + tmp113*tmp7 + tmp22*tmp373 + tmp760*((2.0/3.0)*hDD00 + 2.0/3.0) - tmp89;
               rhs_gfs[IDX4(HDD01GF, i0, i1, i2)] = tmp2*(hDD01*tmp580 - tmp173*tmp643 + tmp22*tmp45 + tmp33*tmp7 + tmp761*tmp79 - tmp84 + vetU0*(hDD01 + hDD_dupD010*xx0));
               rhs_gfs[IDX4(HDD02GF, i0, i1, i2)] = tmp14*(tmp173*vetU1 + tmp22*tmp37 + tmp42*tmp580 + tmp45*tmp7 + tmp50*tmp761 - tmp56 + vetU0*(hDD_dupD020*tmp317 + tmp42));
               rhs_gfs[IDX4(HDD11GF, i0, i1, i2)] = tmp4*(-hDD12*tmp598 - tmp603 + tmp760*((2.0/3.0)*tmp32 + tmp599) + vetU0*(hDD_dupD110*tmp3 + tmp8 + tmp93));
               rhs_gfs[IDX4(HDD12GF, i0, i1, i2)] = tmp20*(-tmp105*tmp37*tmp755 + tmp44*tmp599*tmp760 + tmp531*vetU1 - tmp601 + vetU0*(hDD_dupD120*tmp169 + tmp129));
               rhs_gfs[IDX4(HDD22GF, i0, i1, i2)] = tmp609*(tmp172*tmp621 - tmp607 + tmp760*((2.0/3.0)*tmp34 + (2.0/3.0)*tmp36) + vetU0*(hDD_dupD220*tmp34 + tmp224 + tmp226));
               rhs_gfs[IDX4(LAMBDAU0GF, i0, i1, i2)] = lambdaU_dupD00*vetU0 + tmp190*tmp771 + tmp203*tmp769 + tmp212*tmp767 - tmp224*tmp728 + tmp234*tmp770 + tmp280*tmp694*tmp88 + tmp353*tmp766 - tmp610 + tmp611 + tmp612 + tmp613 + tmp614 - 4.0/3.0*tmp616 + tmp617 + tmp676 - tmp7*tmp8*tmp81 - tmp70*tmp763 + tmp70*tmp765 + tmp723 + tmp764*tmp81;
               rhs_gfs[IDX4(LAMBDAU1GF, i0, i1, i2)] = xx0*(tmp161*tmp692*tmp88 + tmp176*tmp769 + tmp183*tmp771 + tmp235*tmp770 + tmp301*tmp611 + tmp346*tmp766 + tmp416*tmp695 - tmp724 - 4.0/3.0*tmp725 + tmp726*tmp772 + tmp727 - tmp729 + tmp731 + tmp734 + tmp736 + tmp742 + tmp743 - tmp763*tmp81 + tmp764*tmp83 + tmp765*tmp81 + vetU0*(lambdaU_dupD10*tmp2 - tmp652));
               rhs_gfs[IDX4(LAMBDAU2GF, i0, i1, i2)] = tmp317*(-lambdaU2*tmp106*tmp5 + tmp186*tmp771 + tmp199*tmp769 + tmp216*tmp767 + tmp231*tmp770 + tmp253*tmp685*tmp88 + tmp419*tmp695 + tmp47*tmp764 - tmp52*tmp763 + tmp52*tmp765 + tmp745 - tmp746 - 4.0/3.0*tmp747 + tmp749 + tmp750 + 2*tmp751 + tmp752 + tmp753*tmp772 + tmp754 + tmp756 + tmp758 + tmp759 + vetU0*(-lambdaU2*tmp20 + lambdaU_dupD20*tmp14));
               rhs_gfs[IDX4(TRKGF, i0, i1, i2)] = aDD00*tmp695 + (1.0/3.0)*alpha*pow(trK, 2) - tmp300*tmp775 - tmp47*tmp490*tmp774 - tmp52*tmp576*tmp774 - tmp545*tmp58*tmp772 + tmp56*tmp712 + tmp583*tmp767 + tmp592*tmp766 + tmp601*tmp704 - tmp71*(alpha_dDD00 - tmp375 + tmp378) + tmp718*tmp84 + tmp76*tmp768*(-1.0*tmp62 - 2.0*tmp65 + 2.0*tmp68) - tmp773*tmp99 + trK_dupD0*vetU0;
               rhs_gfs[IDX4(VETU0GF, i0, i1, i2)] = betU0 + tmp164*tmp776 + tmp190*tmp778 + tmp203*tmp780 + tmp234*tmp779 + tmp257*tmp781 + tmp280*tmp782 + vetU0*vetU_dupD00;
               rhs_gfs[IDX4(VETU1GF, i0, i1, i2)] = xx0*(tmp161*tmp776 + tmp176*tmp780 + tmp182*tmp778 + tmp235*tmp779 + tmp259*tmp781 + tmp276*tmp782 + tmp633 + vetU0*(tmp2*vetU_dupD10 + tmp6));
               rhs_gfs[IDX4(VETU2GF, i0, i1, i2)] = tmp317*(tmp162*tmp776 + tmp186*tmp778 + tmp198*tmp780 + tmp230*tmp779 + tmp253*tmp781 + tmp275*tmp782 - tmp5*tmp744 + tmp641 + vetU0*(tmp14*vetU_dupD20 + tmp21));
               rhs_gfs[IDX4(VVGF, i0, i1, i2)] = alpha*tmp280*tmp784 - alpha*tmp71*uu_dDD00 + alpha*(fa*tmp64*sin(tmp63) + tmp61*uu) - alpha_dD0*tmp784 + 1.0*cf*cf_dD0*tmp70*tmp783 + tmp164*tmp773*tmp783 + tmp257*tmp775*tmp783 + tmp294*tmp785 + tmp295*tmp785 + tmp296*tmp785 + tmp762*trK + vetU0*vv_dD0;
               rhs_gfs[IDX4(UUGF, i0, i1, i2)] = -tmp762 + uu_dupD0*vetU0;
            }
            
            
        } // END LOOP: for(int i0=NGHOSTS; i0<NGHOSTS+Nxx[0]; i0++)
    } // END LOOP: for(int i1=NGHOSTS; i1<NGHOSTS+Nxx[1]; i1++)
} // END LOOP: for(int i2=NGHOSTS; i2<NGHOSTS+Nxx[2]; i2++)
